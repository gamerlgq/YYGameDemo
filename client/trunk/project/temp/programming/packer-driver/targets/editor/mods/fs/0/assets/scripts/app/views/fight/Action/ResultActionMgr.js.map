{"version":3,"sources":["file:///Users/steven/Workspaces/CocosCreatorProjects/3D/YYGameDemo/client/trunk/project/assets/scripts/app/views/fight/action/ResultActionMgr.ts"],"names":["ResultActionMgr","log","tween","Singleton","G","FightEvent","fightEventMgr","FightConstant","fightActionMgr","resultActionMgr","init","getInstance","_init","_parseResultDataRecord","resultNum","targetNum","parse","data","resultDatas","Result","index","length","resultData","animationConfig","_getAnimationConfig","_parseResultAction","attackData","Attack","skillId","config","getConfig","resultActionId","FightReultAction","Action_Dodge","dodgeAnimation","Action_Block","blockAnimation","Action_HP","embattledAnimation","Action_Dead","Action_Hit_Back","hitbackAnimation","Action_Buff","Action_Lock","skillTimeline","_runSkillTimelineAction","defendUnitTimeline","_runUnitDefendimelineAction","allTimeLine","camp","targets","tarUnits","forEach","target","tarUnit","getUnit","push","animations","oneTimeTween","anim","fightActionData","own","result","animCfg","getAnimation","then","parallel","start","t","unitTimeline","call","_endCallback","_checkIsEnd","send","Result_End","targetInfo","destory","destoryInstance","clear"],"mappings":"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","sourcesContent":["import { log, tween, Tween } from \"cc\";\nimport { Singleton } from \"../../../../framework/components/Singleton\";\nimport { G } from \"../../../common/GlobalFunction\";\nimport { FightEvent } from \"../event/FightEvent\";\nimport { FightEventDataType } from \"../event/FightEventDataType\";\nimport { fightEventMgr } from \"../event/FightEventMgr\";\nimport { FightConstant } from \"../FightConstant\";\nimport { FightActionData, fightActionMgr } from \"./FightActionMgr\";\n\n\ninterface ResultRecord {\n    resultNum:number//第几个结果\n    targetNum:number//第几个目标\n}\n\nexport let resultActionMgr:ResultActionMgr = null;\n/**\n * @description 攻击行动管理器 \n * */\nexport class ResultActionMgr extends Singleton{\n\n    // 记录解析了第几个结果，第几个对象，用于判断result结束\n    private _parseResultDataRecord:ResultRecord = null;\n\n    public static init(){\n        resultActionMgr = ResultActionMgr.getInstance<ResultActionMgr>();\n        resultActionMgr._init();\n    }\n\n    private _init(){\n        this._parseResultDataRecord = {\n            resultNum:0,\n            targetNum:0\n        };\n    }\n\n    public parse(data:FightEventDataType.Action_Data){\n        \n        let resultDatas = data.Result;\n\n        for (let index = 0; index < resultDatas.length; index++) {\n            this._parseResultDataRecord.resultNum = index + 1;\n            const resultData = resultDatas[index];\n            let animationConfig = this._getAnimationConfig(data,resultData);\n            this._parseResultAction(data,animationConfig,resultData);\n        };\n    }\n\n    private _getAnimationConfig(data:FightEventDataType.Action_Data,resultData:any) {\n\n        let attackData = data.Attack;\n        let skillId = attackData[1];\n        let config = G.getConfig(\"FightSkill\",skillId);\n        let resultActionId = resultData[0];\n        switch (resultActionId) {\n            case FightConstant.FightReultAction.Action_Dodge:// 闪避\n                \n                return G.getConfig(\"FightEmbattled\",config.dodgeAnimation);\n\n            case FightConstant.FightReultAction.Action_Block://格挡\n\n                return G.getConfig(\"FightEmbattled\",config.blockAnimation);\n\n            case FightConstant.FightReultAction.Action_HP://hp变化\n\n                return G.getConfig(\"FightEmbattled\",config.embattledAnimation);\n\n            case FightConstant.FightReultAction.Action_Dead://死亡\n\n                return null;\n\n            case FightConstant.FightReultAction.Action_Hit_Back://反击\n\n                return G.getConfig(\"FightEmbattled\",config.hitbackAnimation);\n\n            case FightConstant.FightReultAction.Action_Buff://直接伤害(添加/删除buff)\n\n                return null;\n\n            case FightConstant.FightReultAction.Action_Lock://无法行动\n\n                return null;\n        }\n    }\n\n    private _parseResultAction(data:FightEventDataType.Action_Data,config:any,resultData:any) {\n\n        // 全局技能时间轴\n        let skillTimeline = config.skillTimeline;\n        if (skillTimeline.length > 0){\n            this._runSkillTimelineAction(skillTimeline,data,resultData);\n        }\n\n        // 受击单位时间轴\n        let defendUnitTimeline = config.defendUnitTimeline;\n        if (defendUnitTimeline.length > 0){\n            this._runUnitDefendimelineAction(defendUnitTimeline,data,resultData);\n        }\n    }\n\n    private _runSkillTimelineAction(skillTimeline:Array<any>,data:FightEventDataType.Action_Data,resultData:any) {\n        let allTimeLine:Tween<unknown>[] = [];\n        let camp = resultData[1];\n        let targets = resultData[2];\n        let tarUnits = [];\n        targets.forEach(target => {\n            let tarUnit = fightActionMgr.getUnit([camp,target[0]]);\n            tarUnits.push(tarUnit);\n        });\n\n        for (let index = 0; index < tarUnits.length; index++) {\n            const tarUnit = tarUnits[index];\n            skillTimeline.forEach(animations => {\n                let oneTimeTween = tween();\n                animations.forEach(anim => {\n                    let target = targets[index];\n                    let fightActionData:FightActionData = {\n                        own: tarUnit,\n                        target:tarUnit,\n                        result: target[1],\n                        animCfg:anim\n                    };\n                    let tween = fightActionMgr.getAnimation(fightActionData);\n                    oneTimeTween.then(tween);\n                });\n                allTimeLine.push(oneTimeTween);\n            });\n            \n            if (allTimeLine.length > 1){\n                let parallel = tween(tarUnit).parallel(...allTimeLine);\n                parallel.start();\n            }else{\n                let t = allTimeLine[0];\n                t.target(tarUnit).start();\n            }   \n        }    \n    }\n\n    private _runUnitDefendimelineAction(unitTimeline:Array<any>,data:FightEventDataType.Action_Data,resultData:any) {\n        let allTimeLine:Tween<unknown>[] = [];\n           let camp = resultData[1];\n        let targets = resultData[2];\n        let tarUnits = [];\n        targets.forEach(target => {\n            let tarUnit = fightActionMgr.getUnit([camp,target[0]]);\n            tarUnits.push(tarUnit);\n        });\n\n\n        for (let index = 0; index < tarUnits.length; index++) {\n\n            const tarUnit = tarUnits[index];\n            let target = targets[index];\n            this._parseResultDataRecord.targetNum = index + 1;\n            unitTimeline.forEach(animations => {\n                let oneTimeTween = tween();\n                animations.forEach(anim => {\n                    let fightActionData:FightActionData = {\n                        own: tarUnit,\n                        target:tarUnit,\n                        result: target[1],\n                        animCfg:anim\n                    };\n\n                    let tween = fightActionMgr.getAnimation(fightActionData);\n                    oneTimeTween.then(tween);\n                });\n                allTimeLine.push(oneTimeTween);\n            });\n    \n    \n            if (allTimeLine.length > 1){\n                let parallel = tween(tarUnit).parallel(...allTimeLine);\n                parallel.then(tween().call(()=>{\n                    // 结果结束\n                    this._endCallback(data);\n                })).start();\n            }else{\n                let t = allTimeLine[0];\n                t.target(tarUnit).then(tween().call(()=>{\n                    this._endCallback(data);\n                })).start();\n            }\n        }\n    }\n\n    private _endCallback(data:FightEventDataType.Action_Data) {\n        if (this._checkIsEnd(data)){\n            log(\"result action finished!\")\n            // 结果结束\n            fightEventMgr.send(new FightEvent(FightConstant.FightEvent.Result_End,data));\n        }\n    }\n\n    private _checkIsEnd(data:FightEventDataType.Action_Data):boolean {\n        let resultData = data?.Result;\n        // 最后一个结果\n        if (this._parseResultDataRecord.resultNum == resultData?.length){\n            let targetInfo = resultData[resultData.length-1];\n            let targets = targetInfo[2]?.length;\n            if (this._parseResultDataRecord.targetNum == targets){\n                return true;\n            }\n        }\n        return false\n    }\n\n    public destory(){\n        ResultActionMgr.destoryInstance();\n    }\n\n    public clear(){\n        resultActionMgr = null;\n    }\n}"]}