{"version":3,"sources":["file:///Users/steven/Workspaces/CocosCreatorProjects/3D/YYGameDemo/client/trunk/project/assets/scripts/app/views/fight/action/AcitonJump.ts"],"names":["AcitonJump","tween","Vec3","FightConstant","ActionBase","fightActionMgr","jump","data","callback","setDoneCallback","own","config","animCfg","params","duration","offset","tar","target","tarPos","_getTargetPos","_middlePos","_getMiddlePos","_scale","_getScale","_endPos","_getEndPos","parallel","to","position","progress","start","end","current","ratio","call","setSiblingIndex","play","scale","done","getUnitPos","camp","formationIndex","y","FightUnitType","Attack","Defend","subtract","add"],"mappings":"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","sourcesContent":["import { log, Node, Tween, tween, TweenAction, Vec3 } from \"cc\";\nimport { HeroSpineNode, MonsterSpineNode, SpineNodeBase } from \"../../common/spine/SpineNodeBase\";\nimport { FightConstant } from \"../FightConstant\";\nimport { ActionBase } from \"./ActionBase\";\nimport { FightActionData, fightActionMgr } from \"./FightActionMgr\";\n\nexport class AcitonJump extends ActionBase {\n    \n    /**\n     * \n     * @param data FightActionData\n     * @param callback 可选,回调函数\n     * @returns Tween<Node>\n     */\n    public jump(data:FightActionData,callback?:Function):Tween<Node> {\n\n        this.setDoneCallback(callback);\n\n        let own = data.own;\n        let config = data.animCfg;\n        let params = config.params;\n        let duration:number= params[0];\n        let offset:Array<number> = params[1];\n        \n        let tar = data.target;\n        let tarPos = this._getTargetPos(tar);\n        let _middlePos = this._getMiddlePos(tarPos);\n        let _scale = this._getScale(own);\n        let _endPos = this._getEndPos(own,tarPos,new Vec3(...offset));\n\n        return tween().parallel(\n            tween().to(duration/2,{\n                    position:_middlePos\n                },{\n                    progress:(start,end,current,ratio)=>{\n                        return start + (end - start) * ratio;\n                    }\n                }).to(duration/2,{\n                    position:_endPos\n                },{\n                    progress:(start,end,current,ratio)=>{\n                        return start + (end - start) * ratio;\n                    }\n                }),\n            tween().call(()=>{\n                own.setSiblingIndex(10);\n                own.play(\"jump\");\n            }),\n            tween().to(duration,{\n                scale:_scale\n            })\n        ).call(()=>{\n            this.done();\n        })\n    }\n\n    private _getTargetPos(tar:HeroSpineNode|MonsterSpineNode):Vec3 {\n        return fightActionMgr.getUnitPos([tar.camp,tar.formationIndex]);\n    }\n\n    private _getMiddlePos(tarPos:Vec3):Vec3 {\n        let _middlePos:Vec3 = new Vec3();\n        _middlePos.y = tarPos.y+80;\n        return _middlePos\n    }\n\n    private _getScale(own:HeroSpineNode|MonsterSpineNode):Vec3 {\n        if (own.camp == FightConstant.FightUnitType.Attack){\n            return new Vec3(1.08,1.08,1)\n        }else if (own.camp == FightConstant.FightUnitType.Defend){\n            return new Vec3(-1.08,1.08,1)\n        }\n    }\n\n    private _getEndPos(own:HeroSpineNode|MonsterSpineNode,tarPos:Vec3,offset:Vec3) {\n        if (own.camp == FightConstant.FightUnitType.Attack){\n            return tarPos.subtract(offset)\n        }else if (own.camp == FightConstant.FightUnitType.Defend){\n            return tarPos.add(offset)\n        }\n    }\n}"]}