{"version":3,"sources":["file:///Users/steven/Workspaces/CocosCreatorProjects/3D/GameDemoReal/assets/scripts/app/views/common/spine/RoleSpineFactory.ts"],"names":["RoleSpineFactory","instantiate","Prefab","ResourcesLoader","viewRegisterMgr","factory","cls","node","create","id","_loadPromise","info","getViewInfo","file","Path","toString","prefab","loadPromise","spineNode"],"mappings":";;;qFAaaA,gB;;;;;;;;;;;;;;;;;;;;;AATJC,MAAAA,W,OAAAA,W;AAAmBC,MAAAA,M,OAAAA,M;;AACnBC,MAAAA,e,iBAAAA,e;;AACAC,MAAAA,e,iBAAAA,e;;;;;;;AAGT;AACMC,MAAAA,O,GAAU,CAAiCC,GAAjC,EAAyCC,IAAzC,KACZ,IAAID,GAAJ,CAAQC,IAAR,C;;kCAESP,gB,GAAN,MAAMA,gBAAN,CAAuB;AAC1B;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAC8B,qBAANQ,MAAM,CAAiCF,GAAjC,EAAuCG,EAAvC,EAAiD;AACvE,cAAIF,IAAI,GAAG,MAAMP,gBAAgB,CAACU,YAAjB,CAA8BD,EAA9B,CAAjB;AACA,iBAAOJ,OAAO,CAACC,GAAD,EAAKC,IAAL,CAAd;AACH;;AAEgC,qBAAZG,YAAY,CAACD,EAAD,EAAyB;AACtD,cAAIE,IAAI,GAAG;AAAA;AAAA,kDAAgBC,WAAhB,CAA4B,MAA5B,EAAmC,iBAAnC,CAAX;AACA,cAAIC,IAAI,GAAGF,IAAI,CAACG,IAAL,GAAYL,EAAE,CAACM,QAAH,EAAvB;AACA,cAAIC,MAAa,GAAG,MAAM;AAAA;AAAA,kDAAgBC,WAAhB,CAA4BJ,IAA5B,EAAiCX,MAAjC,CAA1B;AACA,cAAIgB,SAAS,GAAGjB,WAAW,CAACe,MAAD,CAA3B;AACA,iBAAOE,SAAP;AACH;;AA3ByB,O","sourcesContent":["/**\n * 生产角色spine工厂方法\n */\n\nimport { instantiate, Node, Prefab } from \"cc\";\nimport { ResourcesLoader } from \"../../../../framework/data/ResourcesLoader\";\nimport { viewRegisterMgr } from \"../../../define/ViewRegisterMgr\";\nimport { HeroSpineNode, MonsterSpineNode, SpineNodeBase } from \"./SpineNodeBase\";\n\n// 工厂方法\nconst factory = <T extends typeof SpineNodeBase>(cls: T, node:Node) =>\n    new cls(node) as InstanceType<T>;\n\nexport class RoleSpineFactory {\n    /**\n     * \n     * @param cls 类型 HeroSpineNode or MonsterSpineNode 继承SpineNodeBase\n     * @param id number\n     * @returns 异步函数\n     * @example \n     * onLoad(){\n     *    this._loadAttackers();\n     * }\n     * \n     * private async _loadAttackers(){\n     *     let node = await RoleSpineFactory.create(HeroSpineNode,heroId);  \n     *     this.node.addChild(node); \n     * }\n     */\n    public static async create<T extends typeof SpineNodeBase>(cls:T,id:number){\n        let node = await RoleSpineFactory._loadPromise(id);\n        return factory(cls,node);        \n    }\n\n    private static async _loadPromise(id:number):Promise<Node>{\n        let info = viewRegisterMgr.getViewInfo(\"hero\",\"HeroSpinePrefab\");\n        let file = info.Path + id.toString();\n        let prefab:Prefab = await ResourcesLoader.loadPromise(file,Prefab);\n        let spineNode = instantiate(prefab);\n        return spineNode;\n    }\n}"]}