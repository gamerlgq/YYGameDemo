{"version":3,"sources":["file:///Users/steven/Workspaces/CocosCreatorProjects/3D/GameDemoReal/assets/scripts/app/views/loading/ResLoadingLayer.ts"],"names":["_decorator","Component","ProgressBar","Label","sceneMgr","ResourcesLoader","ViewProtocol","viewRegisterMgr","ccclass","property","ResLoadingLayer","start","bar","progress","percent","string","_getLoadingList","_startPreload","_loadingResList","getMaincityPreloadList","length","_goGameView","loadList","finishNum","maxNum","oldVal","newVal","Math","floor","sendCreateView","MainCityLayer"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACSA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,S,OAAAA,S;AAAiBC,MAAAA,W,OAAAA,W;AAAaC,MAAAA,K,OAAAA,K;;AAC1CC,MAAAA,Q,iBAAAA,Q;;AACAC,MAAAA,e,iBAAAA,e;;AACAC,MAAAA,Y,iBAAAA,Y;;AACAC,MAAAA,e,iBAAAA,e;;;;;;;OACH;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBT,U;;iCAGjBU,e,WADZF,OAAO,CAAC,iBAAD,C,UAGHC,QAAQ,CAACN,KAAD,C,UAGRM,QAAQ,CAACP,WAAD,C,oCANb,MACaQ,eADb,SACqCT,SADrC,CAC+C;AAAA;AAAA;;AAAA;;AAAA;;AAAA,mDAQH,IARG;AAAA;;AAU3CU,QAAAA,KAAK,GAAI;AACL,eAAKC,GAAL,CAASC,QAAT,GAAoB,CAApB;AACA,eAAKC,OAAL,CAAaC,MAAb,GAAsB,IAAtB;;AACA,eAAKC,eAAL;;AACA,eAAKC,aAAL;AACH;;AAEOD,QAAAA,eAAe,GAAG;AACtB,eAAKE,eAAL,GAAuB;AAAA;AAAA,kDAAgBC,sBAAhB,EAAvB;AACH;;AAEOF,QAAAA,aAAa,GAAG;AACpB,cAAI,CAAC,KAAKC,eAAN,IAAyB,KAAKA,eAAL,CAAqBE,MAArB,IAA+B,CAA5D,EAA8D;AAC1D,mBAAO,KAAKC,WAAL,EAAP;AACH;;AAED;AAAA;AAAA,kDAAgBC,QAAhB,CAAyB,KAAKJ,eAA9B,EAA8C,CAACK,SAAD,EAAkBC,MAAlB,KAAkC;AAC5E,gBAAIC,MAAM,GAAG,KAAKb,GAAL,CAASC,QAAtB;AACA,gBAAIa,MAAM,GAAGH,SAAS,GAAGC,MAAzB;;AACA,gBAAIE,MAAM,GAAGD,MAAb,EAAqB;AACjBC,cAAAA,MAAM,GAAGD,MAAT;AACH;;AACD,iBAAKb,GAAL,CAASC,QAAT,GAAoBa,MAApB;AACA,iBAAKZ,OAAL,CAAaC,MAAb,GAAsBY,IAAI,CAACC,KAAL,CAAWF,MAAM,GAAG,GAApB,IAA2B,GAAjD;AACH,WARD,EAQE,MAAI;AACF,iBAAKL,WAAL;AACH,WAVD;AAWH;;AAEOA,QAAAA,WAAW,GAAG;AAClB;AAAA;AAAA,oCAASQ,cAAT,CAAwB;AAAA;AAAA,4CAAaC,aAArC,EADkB,CAGlB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACH;;AAlE0C,O;;;;;iBAG1B,I;;;;;;;iBAGE,I","sourcesContent":["\nimport { _decorator, Component, Node, ProgressBar, Label, log } from 'cc';\nimport { sceneMgr } from '../../../framework/core/SceneMgr';\nimport { ResourcesLoader } from '../../../framework/data/ResourcesLoader';\nimport { ViewProtocol } from '../../define/ViewProtocol';\nimport { viewRegisterMgr } from '../../define/ViewRegisterMgr';\nconst { ccclass, property } = _decorator;\n\n@ccclass('ResLoadingLayer')\nexport class ResLoadingLayer extends Component {\n;\n    @property(Label)\n    percent: Label = null;\n\n    @property(ProgressBar)\n    bar: ProgressBar = null;\n\n    private _loadingResList:Array<string> = null;\n\n    start () {\n        this.bar.progress = 0;\n        this.percent.string = \"0%\";\n        this._getLoadingList();\n        this._startPreload();\n    }\n\n    private _getLoadingList() {\n        this._loadingResList = viewRegisterMgr.getMaincityPreloadList();\n    }\n    \n    private _startPreload() {\n        if (!this._loadingResList || this._loadingResList.length == 0){\n            return this._goGameView();\n        }\n\n        ResourcesLoader.loadList(this._loadingResList,(finishNum:number,maxNum:number)=>{\n            let oldVal = this.bar.progress;\n            let newVal = finishNum / maxNum;\n            if (newVal < oldVal) {\n                newVal = oldVal;\n            }\n            this.bar.progress = newVal;\n            this.percent.string = Math.floor(newVal * 100) + \"%\";\n        },()=>{\n            this._goGameView();\n        })\n    }\n\n    private _goGameView() {\n        sceneMgr.sendCreateView(ViewProtocol.MainCityLayer);\n\n        // let modelNewGuide: ModelNewGuide = GameMgr.getInstance().getModel(\n        //     \"ModelNewGuide\"\n        // );\n        // let task = modelNewGuide.getNewGuideTask(1);\n        // task._guideID = 1;        \n        // if (\n        //     !modelNewGuide.isGuideFinish(task._guideID) &&\n        //     SceneMgr.getInstance().getNewGuideLayer()\n        // ) {\n        //     this.node.active = false;\n        //     let godGuide = SceneMgr.getInstance()\n        //         .getNewGuideLayer()\n        //         .getComponent(\"GodGuide\");\n        //     godGuide.setTask(task);\n        //     godGuide.run(() => {\n        //         //打点\n        //         logDot(DotIDS.enterGame);\n        //         SceneMgr.getInstance().openUI(ViewFlags.FightMain);\n        //     });\n        // } else {\n        //     //打点\n        //     logDot(DotIDS.enterGame);\n        //     SceneMgr.getInstance().openUI(ViewFlags.FightMain);\n        // }\n    }\n}"]}