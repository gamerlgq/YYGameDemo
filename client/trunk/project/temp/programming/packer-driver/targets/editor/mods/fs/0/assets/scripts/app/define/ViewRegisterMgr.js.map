{"version":3,"sources":["file:///Users/steven/Workspaces/CocosCreatorProjects/3D/YYGameDemo/client/trunk/project/assets/scripts/app/define/ViewRegisterMgr.ts"],"names":["ViewRegisterMgr","Singleton","DialogCreator","LoginCreator","PreRewardCreator","MainCityCreator","ShowBackgroundMgr","viewCreatorMgr","FightCreator","FormationCreator","LoadingCreator","ChatCreator","G","constructor","commonUI","prefab","path","isCache","login","isShowBg","dialog","preReward","maincity","fight","hero","batch","formation","loading","chat","Object","keys","ViewType","forEach","system","module","view","arr","isHidden","regShowBackgroundView","getMaincityPreloadList","list","Array","config","getConfig","key","pair","push","getViewInfo","name","prefabName","cfg","System","View","Path","Hidden","Cache","registerAllCreator","Cretors","ctor","registeredCreator","clear","viewRegisterMgr","getInstance"],"mappings":";;;4MA0CaA,e;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAlCJC,MAAAA,S,iBAAAA,S;;AACAC,MAAAA,a,iBAAAA,a;;AACAC,MAAAA,Y,iBAAAA,Y;;AACAC,MAAAA,gB,iBAAAA,gB;;AACAC,MAAAA,e,iBAAAA,e;;AACAC,MAAAA,iB,iBAAAA,iB;;AACAC,MAAAA,c,iBAAAA,c;;AACAC,MAAAA,Y,iBAAAA,Y;;AACAC,MAAAA,gB,kBAAAA,gB;;AAGAC,MAAAA,c,kBAAAA,c;;AACFC,MAAAA,W;;AAEEC,MAAAA,C,kBAAAA,C;;;;;;;iCAoBIZ,e,GAAN,MAAMA,eAAN;AAAA;AAAA,kCAAuE;AAE1E;AAuJA;AAYQa,QAAAA,WAAW,GAAG;AAClB;;AADkB,4CAlKX;AACP;AACAC,YAAAA,QAAQ,EAAE;AACNC,cAAAA,MAAM,EAAE;AACJ,kCAAkB;AACdC,kBAAAA,IAAI,EAAE,kCADQ;AAEdC,kBAAAA,OAAO,EAAE;AAFK,iBADd;AAKJ,8BAAc;AACVD,kBAAAA,IAAI,EAAE,+BADI;AAEVC,kBAAAA,OAAO,EAAE;AAFC,iBALV;AASJ,+BAAe;AACXD,kBAAAA,IAAI,EAAE,+BADK;AAEXC,kBAAAA,OAAO,EAAE;AAFE;AATX;AADF,aAFH;AAmBP;AACAC,YAAAA,KAAK,EAAE;AACHH,cAAAA,MAAM,EAAE;AACJ,6BAAa;AACTC,kBAAAA,IAAI,EAAE,uBADG;AAETG,kBAAAA,QAAQ,EAAE;AAFD,iBADT;AAKJ,+BAAe;AACXH,kBAAAA,IAAI,EAAE,yBADK;AAEXG,kBAAAA,QAAQ,EAAE;AAFC,iBALX;AASJ,8BAAc;AACEH,kBAAAA,IAAI,EAAC;AADP,iBATV;AAYJ,qCAAoB;AACJA,kBAAAA,IAAI,EAAC,4BADD;AAEJG,kBAAAA,QAAQ,EAAC;AAFL,iBAZhB;AAgBJ,sCAAqB;AACLH,kBAAAA,IAAI,EAAC,EADA;AAELG,kBAAAA,QAAQ,EAAC;AAFJ,iBAhBjB;AAoBJ,sCAAqB;AACLH,kBAAAA,IAAI,EAAC,EADA;AAELG,kBAAAA,QAAQ,EAAC;AAFJ,iBApBjB;AAwBJ,8BAAa;AACTH,kBAAAA,IAAI,EAAC,0BADI;AAETG,kBAAAA,QAAQ,EAAC;AAFA;AAxBT;AADL,aApBA;AAoDP;AACAC,YAAAA,MAAM,EAAE;AACJL,cAAAA,MAAM,EAAE;AACJ,mCAAmB;AACfC,kBAAAA,IAAI,EAAE,qCADS;AAEfG,kBAAAA,QAAQ,EAAE,IAFK;AAGfF,kBAAAA,OAAO,EAAE;AAHM,iBADf;AAMJ,wBAAQ;AACJD,kBAAAA,IAAI,EAAE,wBADF;AAEJG,kBAAAA,QAAQ,EAAE,IAFN;AAGJF,kBAAAA,OAAO,EAAE;AAHL;AANJ;AADJ,aArDD;AAoEPI,YAAAA,SAAS,EAAE;AACPN,cAAAA,MAAM,EAAE;AACJ,iCAAiB;AACbC,kBAAAA,IAAI,EAAE,8CADO;AAEbG,kBAAAA,QAAQ,EAAE;AAFG;AADb;AADD,aApEJ;AA6EP;AACAG,YAAAA,QAAQ,EAAE;AACNP,cAAAA,MAAM,EAAE;AACJ,iCAAiB;AACbC,kBAAAA,IAAI,EAAE,gCADO;AAEbC,kBAAAA,OAAO,EAAE;AAFI,iBADb;AAKJ,8BAAc;AACVD,kBAAAA,IAAI,EAAE,6BADI;AAEVC,kBAAAA,OAAO,EAAE;AAFC;AALV;AADF,aA9EH;AA2FP;AACAM,YAAAA,KAAK,EAAE;AACHR,cAAAA,MAAM,EAAE;AACJ,kCAAkB;AACdC,kBAAAA,IAAI,EAAE;AADQ,iBADd;AAIJ,+BAAe;AACXA,kBAAAA,IAAI,EAAE;AADK,iBAJX;AAOJ,iCAAiB;AACbA,kBAAAA,IAAI,EAAE;AADO,iBAPb;AAUJ,kCAAkB;AACdA,kBAAAA,IAAI,EAAE;AADQ;AAVd;AADL,aA5FA;AA6GP;AACAQ,YAAAA,IAAI,EAAE;AACFT,cAAAA,MAAM,EAAE;AACJ,mCAAmB;AACfC,kBAAAA,IAAI,EAAE,yBADS;AAEfS,kBAAAA,KAAK,EAAC,CAAC,CAAD,EAAG,CAAH;AAFS;AADf;AADN,aA9GC;AAsHP;AACAC,YAAAA,SAAS,EAAE;AACPX,cAAAA,MAAM,EAAE;AACJ,iCAAiB;AACbC,kBAAAA,IAAI,EAAE;AADO;AADb;AADD,aAvHJ;AA8HP;AACAW,YAAAA,OAAO,EAAC;AACJZ,cAAAA,MAAM,EAAC;AACH,mCAAkB;AACdC,kBAAAA,IAAI,EAAC,iCADS;AAEdC,kBAAAA,OAAO,EAAE;AAFK,iBADf;AAKH,qCAAoB;AAChBD,kBAAAA,IAAI,EAAC,mCADW;AAEhBC,kBAAAA,OAAO,EAAE;AAFO;AALjB;AADH,aA/HD;AA4IPW,YAAAA,IAAI,EAAC;AACDb,cAAAA,MAAM,EAAC;AACH,6BAAY;AACRC,kBAAAA,IAAI,EAAC,wBADG;AAERG,kBAAAA,QAAQ,EAAE;AAFF;AADT;AADN;AA5IE,WAkKW;;AAAA,2CAXZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yCAWY;;AAElBU,UAAAA,MAAM,CAACC,IAAP,CAAY,KAAKC,QAAjB,EAA2BC,OAA3B,CAAoCC,MAAD,IAAoB;AACnD;AACA,gBAAIC,MAAM,GAAG,KAAKH,QAAL,CAAcE,MAAd,CAAb;AACAJ,YAAAA,MAAM,CAACC,IAAP,CAAYI,MAAM,CAACnB,MAAnB,EAA2BiB,OAA3B,CAAoCG,IAAD,IAAkB;AAAA;;AACjD,kBAAIC,GAAG,GAAeF,MAAM,CAACnB,MAAP,CAA+BoB,IAA/B,CAAtB;AACA,kBAAIE,QAAQ,oBAAGD,GAAG,CAACjB,QAAP,yDAAmB,KAA/B,CAFiD,CAGjD;;AACA,kBAAIkB,QAAJ,EAAc;AACV;AAAA;AAAA,4DAAkBC,qBAAlB,CAAwCH,IAAxC;AACH;AACJ,aAPD;AAQH,WAXD;AAYH,SAnLyE,CAqL1E;;;AACAI,QAAAA,sBAAsB,GAAgB;AAClC,cAAIC,IAAkB,GAAG,IAAIC,KAAJ,EAAzB;AACA,cAAIC,MAAM,GAAG;AAAA;AAAA,sBAAEC,SAAF,CAAY,iBAAZ,CAAb;;AACA,cAAID,MAAJ,EAAW;AACP,kBAAMZ,IAAI,GAAGD,MAAM,CAACC,IAAP,CAAYY,MAAZ,CAAb;AACAZ,YAAAA,IAAI,CAACE,OAAL,CAAaY,GAAG,IAAE;AACd,kBAAIC,IAAkB,GAAC,IAAIJ,KAAJ,EAAvB;AACAD,cAAAA,IAAI,CAACM,IAAL,CAAUF,GAAV;AACH,aAHD;AAIH;;AACD,iBAAOJ,IAAP;AACH,SAjMyE,CAoM1E;;;AACAO,QAAAA,WAAW,CAENC,IAFM,EAEaC,UAFb,EAEsE;AAAA;;AAC7E,cAAIf,MAAM,GAAG,KAAKH,QAAL,CAAciB,IAAd,CAAb;AACA,cAAIE,GAAG,GAAehB,MAAM,CAACnB,MAAP,CAA+BkC,UAA/B,CAAtB;AACA,iBAAO;AACHE,YAAAA,MAAM,EAAEH,IADL;AAEHI,YAAAA,IAAI,EAAmBH,UAFpB;AAGHI,YAAAA,IAAI,EAAEH,GAAG,CAAClC,IAHP;AAIHsC,YAAAA,MAAM,mBAAEJ,GAAG,CAAC/B,QAAN,yDAAkB,KAJrB;AAKHoC,YAAAA,KAAK,kBAAEL,GAAG,CAACjC,OAAN,uDAAiB;AALnB,WAAP;AAOH,SAjNyE,CAmN1E;;;AACOuC,QAAAA,kBAAkB,GAAG;AACxB,eAAKC,OAAL,CAAazB,OAAb,CAAsB0B,IAAD,IAAU;AAC3B;AAAA;AAAA,kDAAeC,iBAAf,CAAiC,IAAID,IAAJ,EAAjC;AACH,WAFD;AAGH;;AAEDE,QAAAA,KAAK,GAAE;AACH,qCAAAC,eAAe,GAAG,IAAlB;AACH;;AA5NyE,O,GA+N9E;;;iCACWA,e,GAAkB,CAAC,MAAM;AAChC,eAAO7D,eAAe,CAAC8D,WAAhB,EAAP;AACH,OAF4B,G","sourcesContent":["/*\n * @Author: liuguoqing\n * @Date: 2022-03-03 20:51:02\n * @LastEditors: liuguoqing\n * @LastEditTime: 2022-03-04 23:37:27\n * @Description: file content\n */\n\nimport { Singleton } from \"../../framework/components/Singleton\";\nimport { DialogCreator } from \"../views/dialog/Creator\";\nimport { LoginCreator } from \"../views/login/Creator\";\nimport { PreRewardCreator } from \"../views/pre_reward/Creator\";\nimport { MainCityCreator } from \"../views/maincity/Creator\";\nimport { ShowBackgroundMgr } from \"./define\";\nimport { viewCreatorMgr } from \"../../framework/ui/ViewCreatorManager\";\nimport { FightCreator } from \"../views/fight/Creator\";\nimport { FormationCreator } from \"../views/formation/Creator\";\nimport { yy } from \"./YYNamespace\";\nimport { ViewInfoType } from \"./ConfigType\";\nimport { LoadingCreator } from \"../views/loading/Creator\";\nimport ChatCreator from \"../views/chat/Creator\";\nimport { log } from \"cc\";\nimport { G } from \"../common/GlobalFunction\";\n\ntype ViewConfig = {\n    path: string;//预制体路径\n    isShowBg?: boolean;//是否显示背景(默认false不现实背景)\n    isCache?: boolean;//是否永久缓存(默认false不永久缓存) 手动管理是否释放\n    batch?:Array<number>;//批量资源例如 hero_1 ~ helr_xx [1,xx];\n}\n\ninterface ViewRegMgrInterface {\n    ViewType: {\n        [x: string]: {\n            prefab: {\n                [y: string]: ViewConfig\n            }\n        }\n    };\n}\n\n\nexport class ViewRegisterMgr extends Singleton implements ViewRegMgrInterface {\n  \n    // 注册预页面预制体路径\n    ViewType = {\n        // 通用ui\n        commonUI: {\n            prefab: {\n                \"RewardItemIcon\": {\n                    path: \"common_ui/prefabs/RewardItemIcon\",\n                    isCache: true\n                },\n                \"netloading\": {\n                    path: \"common_ui/prefabs/netinstable\",\n                    isCache: true\n                },\n                \"TouchEffect\": {\n                    path: \"common_ui/prefabs/TouchEffect\",\n                    isCache: true\n                }\n            }\n        },\n\n        // 登陆\n        login: {\n            prefab: {\n                \"LoginView\": {\n                    path: 'core/prefab/LoginView',\n                    isShowBg: true,\n                },\n                \"AccountView\": {\n                    path: 'core/prefab/AccountView',\n                    isShowBg: true,\n                },\n                \"LoginLayer\": {\n                                path:'login/prefabs/loginlayer',\n                            },\n                \"LoginAccountLayer\":{\n                                path:'login/prefabs/loginaccount',\n                                isShowBg:true,\n                            },\n                \"UserAgreementLayer\":{\n                                path:\"\",\n                                isShowBg:true,\n                },\n                \"PrivacyPolicyLayer\":{\n                                path:\"\",\n                                isShowBg:true,\n                },\n                \"NoticeView\":{\n                    path:\"login/prefabs/noticeview\",\n                    isShowBg:true,\n                }\n            },\n        },\n\n        // dialog/tips\n        dialog: {\n            prefab: {\n                \"DoubleBtnDialog\": {\n                    path: 'common_ui/prefabs/double_btn_dialog',\n                    isShowBg: true,\n                    isCache: true\n                },\n                \"Tips\": {\n                    path: \"common_ui/prefabs/tips\",\n                    isShowBg: true,\n                    isCache: true\n                }\n            }\n        },\n\n        preReward: {\n            prefab: {\n                \"preRewardMain\": {\n                    path: \"preview_reward/prefabs/preview_reward_prefab\",\n                    isShowBg: true,\n                }\n            }\n        },\n\n        // 主城\n        maincity: {\n            prefab: {\n                \"MainCityLayer\": {\n                    path: \"maincity/prefabs/maincitylayer\",\n                    isCache: true\n                },\n                \"MainCityUI\": {\n                    path: \"maincity/prefabs/maincityui\",\n                    isCache: true\n                }\n            }\n        },\n\n        // 战斗\n        fight: {\n            prefab: {\n                \"FightMainLayer\": {\n                    path: \"fight/prefabs/changjing/mainfightlayer\"\n                },\n                \"FightMainUI\": {\n                    path: \"fight/prefabs/changjing/mainfightui\"\n                },\n                \"FightEditorUI\": {\n                    path: \"fight/prefabs/changjing/fighteditorui\"\n                },\n                \"FightFormation\": {\n                    path: \"fight/prefabs/changjing/FightFormation\"\n                }\n            }\n        },\n\n        // 武将\n        hero: {\n            prefab: {\n                \"HeroSpinePrefab\": {\n                    path: \"hero/prefabs/hero/hero_\",\n                    batch:[1,3]\n                }\n            }\n        },\n        //布阵\n        formation: {\n            prefab: {\n                \"FormationView\": {\n                    path: \"formation/prefabs/formation\"\n                }\n            }\n        },\n        // loading\n        loading:{\n            prefab:{\n                \"ResLoadingLayer\":{\n                    path:\"loading/prefabs/resloadinglayer\",\n                    isCache: true\n                },\n                \"TransLoadingLayer\":{\n                    path:\"loading/prefabs/transloadinglayer\",\n                    isCache: true\n                },\n            }\n        },\n\n        chat:{\n            prefab:{\n                \"ChatLayer\":{\n                    path:\"chat/prefabs/ChatLayer\",\n                    isShowBg: true,\n                }\n            }\n        }\n    }\n\n    // 注册各个系统的预制体\n    Cretors = [\n        LoginCreator,\n        DialogCreator,\n        PreRewardCreator,\n        MainCityCreator,\n        FightCreator,\n        FormationCreator,\n        LoadingCreator,\n        ChatCreator,\n    ]\n\n    private constructor() {\n        super();\n        Object.keys(this.ViewType).forEach((system: string) => {\n            // log(\"ViewRegisterMgr:ctor() system [ %s ]\",system);\n            let module = this.ViewType[system];\n            Object.keys(module.prefab).forEach((view: string) => {\n                let arr = <ViewConfig>module.prefab[<string><unknown>view];\n                let isHidden = arr.isShowBg ?? false;\n                // log(\"ViewRegisterMgr:ctor() view [ %s ] [ %s ]\",view,isHidden.toString());\n                if (isHidden) {\n                    ShowBackgroundMgr.regShowBackgroundView(view);\n                }\n            })\n        })\n    }\n\n    // 在编辑器中右键添加resources下的预加载资源,自动保存到maincity/datas/preload.json文件中\n    getMaincityPreloadList():Array<string>{\n        let list:Array<string> = new Array();\n        let config = G.getConfig(\"MaincityPreload\");\n        if (config){\n            const keys = Object.keys(config);\n            keys.forEach(key=>{\n                let pair:Array<string>=new Array();\n                list.push(key);\n            })\n        }\n        return list;\n    }\n\n\n    // 各个系统中获取页面预制的都路径 返回 ViewInfoType\n    getViewInfo<TMoudleName extends yy.types.ViewModuleName,\n        TPrefabName = keyof ViewRegisterMgr['ViewType'][TMoudleName]['prefab']>\n        (name: TMoudleName, prefabName: yy.types.NoInfer<TPrefabName>): ViewInfoType {\n        let module = this.ViewType[name];\n        let cfg = <ViewConfig>module.prefab[<string><unknown>prefabName];\n        return {\n            System: name,\n            View: <string><unknown>prefabName,\n            Path: cfg.path,\n            Hidden: cfg.isShowBg ?? false,\n            Cache: cfg.isCache ?? false\n        };\n    }\n\n    // enter app call this method,register all view creator\n    public registerAllCreator() {\n        this.Cretors.forEach((ctor) => {\n            viewCreatorMgr.registeredCreator(new ctor());\n        })\n    }\n\n    clear(){\n        viewRegisterMgr = null\n    }\n}\n\n// ()();\nexport let viewRegisterMgr = (() => {\n    return ViewRegisterMgr.getInstance<ViewRegisterMgr>();\n})();"]}