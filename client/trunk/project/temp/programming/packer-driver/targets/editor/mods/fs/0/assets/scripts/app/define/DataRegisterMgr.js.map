{"version":3,"sources":["file:///Users/steven/Workspaces/CocosCreatorProjects/3D/GameDemoReal/assets/scripts/app/define/DataRegisterMgr.ts"],"names":["DataRegisterMgr","error","log","Singleton","dataMgr","Test_Parser","Test","Translate","FightSkill","FightHit","FightEmbattled","MaincityPreload","loadAllData","doneFunc","startTS","Date","getMilliseconds","length","Object","keys","DataType","key","prototype","hasOwnProperty","call","value","dataHandlerName","path","pair","parser","registerDataFile","loadData","isDone","endTS","clear","dataRegisterMgr","getInstance"],"mappings":";;;2EAYaA,e;;;;;;;;;;;;;;;;;;;;;;;AALJC,MAAAA,K,OAAAA,K;AAAOC,MAAAA,G,OAAAA,G;;AACPC,MAAAA,S,iBAAAA,S;;AACAC,MAAAA,O,iBAAAA,O;;AACAC,MAAAA,W,iBAAAA,W;;;;;;;iCAEIL,e,GAAN,MAAMA,eAAN;AAAA;AAAA,kCAAuC;AAAA;AAAA;;AAAA,4CAC/B;AACP;AACR;AACA;AACA;AACA;AACA;AACQM,YAAAA,IAAI,EAAC,CAAC,MAAD,EAAQ,iBAAR,EAA0B,EAA1B,EAA6B;AAAA;AAAA,6CAA7B,CAPE;AAQPC,YAAAA,SAAS,EAAC,CAAC,WAAD,EAAa,0BAAb,EAAwC,EAAxC,CARH;AASPC,YAAAA,UAAU,EAAC,CAAC,YAAD,EAAc,0BAAd,EAAyC,CAAC,CAAD,EAAG,CAAH,CAAzC,CATJ;AAUPC,YAAAA,QAAQ,EAAC,CAAC,UAAD,EAAY,sBAAZ,EAAmC,CAAC,CAAD,EAAG,CAAH,CAAnC,CAVF;AAWPC,YAAAA,cAAc,EAAC,CAAC,gBAAD,EAAkB,kCAAlB,EAAqD,CAAC,CAAD,EAAG,CAAH,CAArD,CAXR;AAYPC,YAAAA,eAAe,EAAC,CAAC,iBAAD,EAAmB,wBAAnB,EAA4C,EAA5C;AAZT,WAD+B;AAAA;;AAgB1CC,QAAAA,WAAW,CAACC,QAAD,EAAuB;AAC9B,cAAIC,OAAO,GAAG,IAAIC,IAAJ,GAAWC,eAAX,EAAd;AACA,cAAIC,MAAM,GAAGC,MAAM,CAACC,IAAP,CAAY,KAAKC,QAAjB,EAA2BH,MAAxC;;AACA,eAAK,MAAMI,GAAX,IAAkB,KAAKD,QAAvB,EAAiC;AAC7B,gBAAIF,MAAM,CAACI,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqC,KAAKJ,QAA1C,EAAoDC,GAApD,CAAJ,EAA8D;AAC1D,oBAAMI,KAAK,GAAG,KAAKL,QAAL,CAAcC,GAAd,CAAd;AACA,kBAAIK,eAAe,GAAGD,KAAK,CAAC,CAAD,CAA3B;AACA,kBAAIE,IAAI,GAAGF,KAAK,CAAC,CAAD,CAAhB;AACA,kBAAIG,IAAI,GAAGH,KAAK,CAAC,CAAD,CAAhB;AACA,kBAAII,MAAM,GAAGJ,KAAK,CAAC,CAAD,CAAlB;AACA;AAAA;AAAA,sCAAQK,gBAAR,CAAyBJ,eAAzB,EAAyCC,IAAzC,EAA8CE,MAA9C;AACA;AAAA;AAAA,sCAAQE,QAAR,CAAiBL,eAAjB,EAAiCE,IAAjC,EAAuCI,MAAD,IAAkB;AACpD,oBAAI,CAACA,MAAL,EAAa;AACT/B,kBAAAA,KAAK,CAAC,uCAAD,EAAyCyB,eAAzC,CAAL;AACH;;AACDT,gBAAAA,MAAM;;AACN,oBAAIA,MAAM,IAAI,CAAd,EAAgB;AACZ,sBAAIJ,QAAJ,EAAc;AACV,wBAAIoB,KAAK,GAAG,IAAIlB,IAAJ,GAAWC,eAAX,EAAZ;AACAd,oBAAAA,GAAG,CAAC,kCAAD,EAAoC+B,KAAK,GAAGnB,OAA5C,CAAH;AACAD,oBAAAA,QAAQ;AACX;AACJ;AACJ,eAZD;AAaH;AACJ;AACJ;;AAEDqB,QAAAA,KAAK,GAAE;AACH,qCAAAC,eAAe,GAAG,IAAlB;AACH;;AA9CyC,O,GAiD9C;;;iCACWA,e,GAAkB,CAAC,MAAI;AAC9B,eAAOnC,eAAe,CAACoC,WAAhB,EAAP;AACH,OAF4B,G","sourcesContent":["/*\n * @Author: liuguoqing\n * @Date: 2022-03-04 23:09:26\n * @LastEditors: liuguoqing\n * @LastEditTime: 2022-03-06 15:24:31\n * @Description: file content\n */\nimport { error, log } from \"cc\";\nimport { Singleton } from \"../../framework/components/Singleton\";\nimport { dataMgr } from \"../../framework/data/DataMgr\";\nimport { Test_Parser } from \"../parser/Test_Parser\";\n\nexport class DataRegisterMgr extends Singleton{\n    DataType = {\n        /**\n         * @param [0] data handler name:\"Test\";\n         * @param [1] data path:\"Raw/map/buff_card\";\n         * @param [2] array<number>:\"[0,100]\" //[file start index,file ended index] 例如:genral_0 ~ genral_100(加载101个武将配置); 默认值[]\n         * @param [3] parser new xxx_parser() //多语言解析器;\n         */\n        Test:[\"Test\",\"test/datas/test\",[],new Test_Parser()],\n        Translate:[\"Translate\",\"translate/data/translate\",[]],\n        FightSkill:[\"FightSkill\",\"fight/datas/skill/skill_\",[1,2]],\n        FightHit:[\"FightHit\",\"fight/datas/hit/hit_\",[1,2]],\n        FightEmbattled:[\"FightEmbattled\",\"fight/datas/embattled/embattled_\",[1,1]],\n        MaincityPreload:[\"MaincityPreload\",\"maincity/datas/preload\",[]]\n    }\n\n    loadAllData(doneFunc: () => void) {\n        let startTS = new Date().getMilliseconds();\n        let length = Object.keys(this.DataType).length;\n        for (const key in this.DataType) {\n            if (Object.prototype.hasOwnProperty.call(this.DataType, key)) {\n                const value = this.DataType[key];\n                let dataHandlerName = value[0];\n                let path = value[1];\n                let pair = value[2];\n                let parser = value[3];\n                dataMgr.registerDataFile(dataHandlerName,path,parser);\n                dataMgr.loadData(dataHandlerName,pair,(isDone:boolean)=>{\n                    if (!isDone) {\n                        error(\"DataRegisterMgr loadData error:[ %s ]\",dataHandlerName);\n                    }\n                    length--;\n                    if (length == 0){\n                        if (doneFunc) {\n                            let endTS = new Date().getMilliseconds();\n                            log(\"Load all date file cost [ %s ]ms\",endTS - startTS);\n                            doneFunc();\n                        }\n                    }\n                })     \n            }\n        }\n    }\n\n    clear(){\n        dataRegisterMgr = null;\n    }\n}\n\n// ()();\nexport let dataRegisterMgr = (()=>{\n    return DataRegisterMgr.getInstance<DataRegisterMgr>();\n})();"]}