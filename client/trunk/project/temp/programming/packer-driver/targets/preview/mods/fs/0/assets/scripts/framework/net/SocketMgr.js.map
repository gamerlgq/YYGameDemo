{"version":3,"sources":["file:///Users/steven/Workspaces/CocosCreatorProjects/3D/GameDemoReal/assets/scripts/framework/net/SocketMgr.ts"],"names":["SocketMgr","log","Singleton","gameMgr","Message","netLoadingMgr","netStateMgr","constructor","socketParams","StateChangeCallback","_listenOnSocketState","bind","registerCallbackHandler","connect","ip","port","openFunc","errorFunc","_ip","_port","url","ws","WebSocket","_ws","onopen","event","_onopen","onmessage","_onmessage","onerror","_onerror","onclose","_onclose","error","reConnect","close","send","msgId","data","JSON","stringify","addMsgLoading","sendInnerMsg","msg","addInnerMessage","params","_StateChangeCallback","onSocketChange","jsonData","parse","proto","addNetMessage","removeMsgLoading","clear","socketMgr","getInstance"],"mappings":"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","sourcesContent":["import { log } from \"cc\";\nimport { Singleton } from \"../components/Singleton\";\nimport { gameMgr } from \"../core/GameMgr\";\nimport { Message } from \"../listener/Message\";\nimport { netLoadingMgr } from \"./NetLoadingMgr\";\nimport { netStateMgr } from \"./NetStateMgr\";\n\n/*\n * @Author: liuguoqing\n * @Date: 2022-03-02 17:01:02\n * @LastEditors: liuguoqing\n * @LastEditTime: 2022-03-19 13:16:31\n * @Description: file content\n */\n\nexport type SocketCallback = {\n    (event: any):void\n}\n\nclass SocketMgr extends Singleton {\n    private _ws: WebSocket;\n    private _StateChangeCallback: SocketCallback;\n    private _ip: string;\n    private _port: string;\n\n    private constructor() {\n        super();\n        // net state change callback\n        let socketParams = {\n            StateChangeCallback: this._listenOnSocketState.bind(this),\n        };\n        this.registerCallbackHandler(socketParams);\n        \n    }\n\n    connect( ip: string,port: string,openFunc:SocketCallback,errorFunc:SocketCallback) {\n        this._ip = ip;\n        this._port = port;\n        try {\n            let url = `ws://${ip}:${port}`;\n            let ws = new WebSocket(url);\n            this._ws = ws;\n            ws.onopen = (event) => {\n                this._onopen(event);\n                openFunc(event);\n            };\n            ws.onmessage = (event) => {\n                this._onmessage(event);\n            };\n            ws.onerror = (event) => {\n                this._onerror(event);\n                errorFunc(event);\n            };\n            ws.onclose = (event) => {\n                this._onclose(event);\n                errorFunc(event);\n            };\n        } catch (error) {\n            log(\"connect error: \", error);\n        }\n    }\n\n    reConnect() {\n        if (this._ip && this._port) {\n            this.connect(\n                this._ip,\n                this._port,\n                (event) => {},\n                (event) => {log(event);}\n            );\n        }\n    }\n\n    close() {\n        if (this._ws) {\n            this._ws.close(4888);\n            this._ws = null;\n        }\n    }\n\n    send(msgId: number, data: Object = {}) {\n        data[\"proto\"] = msgId;\n        data = JSON.stringify(data);\n        log(\"[WS] Send:\", msgId, data);\n        this._ws.send(<string>data);\n\n        netLoadingMgr.addMsgLoading(msgId)\n    }\n\n    sendInnerMsg(msgId: number, data: Object = {}) {\n        let msg = new Message(msgId, data);\n        log(\"[WS] Send Inner:\", msgId, data);\n        gameMgr.addInnerMessage(msg);\n    }\n\n    registerCallbackHandler(params) {\n        this._StateChangeCallback = params.StateChangeCallback;\n    }\n\n    /**\n     * 监听Socket 状态变化\n     */\n     private _listenOnSocketState(event) {\n        netStateMgr.onSocketChange(event);\n    }\n\n    private _onopen(event) {\n        log(\"Send Text WS was opened.\");\n        log(event);\n        if (this._StateChangeCallback) {\n            this._StateChangeCallback(event);\n        }\n    }\n\n    // 接收消息\n    private _onmessage(event: any) {\n        let data = event.data;\n        if (data == null) {\n            log(event);\n            return;\n        }\n        let jsonData = JSON.parse(data);\n        log(\"[WS] Rev:\", jsonData.proto, data);\n        let msg = new Message(-jsonData.proto, jsonData);\n        gameMgr.addNetMessage(msg);\n\n        netLoadingMgr.removeMsgLoading(msg.msgId)\n    }\n\n    private _onerror(event) {\n        log(\"Send Text fired an error\");\n        if (this._StateChangeCallback) {\n            this._StateChangeCallback(event);\n        }\n    }\n\n    private _onclose(event) {\n        log(event);\n        log(\"WebSocket instance closed.\");\n        if (this._StateChangeCallback) {\n            this._StateChangeCallback(event);\n        }\n    }\n\n    clear() {\n        socketMgr = null;\n    }\n}\n\n// ()();\nexport let socketMgr = (()=>{\n    return SocketMgr.getInstance<SocketMgr>();\n})();"]}