{"version":3,"sources":["file:///Users/steven/Workspaces/CocosCreatorProjects/3D/GameDemoReal/assets/scripts/framework/net/HttpMgr.ts"],"names":["HttpMessage","HttpMgr","log","sys","Singleton","netStateMgr","constructor","code","data","_code","_data","get","callback","url","needLoading","xhr","XMLHttpRequest","onreadystatechange","readyState","status","msg","_responseHandler","ontimeout","ev","netWorkError","onerror","open","timeout","send","post","isNative","setRequestHeader","_serializeData","_packMsg","JSON","parse","responseText","error","datas","serializeParams","variable","substring","length","clear","httpMgr","getInstance"],"mappings":"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","sourcesContent":["/*\n * @Author: liuguoqing\n * @Date: 2022-03-02 10:41:03\n * @LastEditors: liuguoqing\n * @LastEditTime: 2022-03-03 15:03:06\n * @Description: file content\n */\n\nimport { log, sys } from \"cc\";\nimport { Singleton } from \"../components/Singleton\";\nimport { netStateMgr } from \"./NetStateMgr\";\n\nexport type HttpCallback = {\n    (msg:HttpMessage):void\n}\n\nexport class HttpMessage {\n    private _code:number;\n    public readonly code:number;//结果码\n    private _data:any;\n    public readonly data:number;//解析后的json{}\n    constructor(code:number,data:any) {\n        this._code = code;\n        this._data = data;\n    }\n}\n\n class HttpMgr extends Singleton{\n    private constructor(){\n        super();\n    }\n   \n    get(callback:HttpCallback,url:string,needLoading?: boolean){\n        log(\"[Http] Get\", url);\n        let xhr = new XMLHttpRequest();\n        xhr.onreadystatechange = () => {\n            if (xhr.readyState == 4 && xhr.status >= 200 && xhr.status < 500) {\n                let msg = this._responseHandler(xhr);\n                callback(msg);\n            }\n        };\n        xhr.ontimeout = (ev) => {\n            // GlobalFunction.ShowMsgTips(\"请求超时，请检查网络设置或稍后再试\");\n            netStateMgr.netWorkError();\n        };\n        xhr.onerror = (ev) => {\n            // GlobalFunction.ShowMsgTips(\n            //     \"网络连接失败，请检查网络设置或稍后再试\"\n            // );\n            netStateMgr.netWorkError();\n        };\n        xhr.open(\"GET\", url);\n        xhr.timeout = 6000;\n        xhr.send();\n    }\n\n    post(callback:HttpCallback,url:string,data:any,needLoading?: boolean){\n        log(\"[Http] Post\", url);\n        let xhr = new XMLHttpRequest();\n        xhr.onreadystatechange = () => {\n            if (xhr.readyState == 4 && xhr.status >= 200 && xhr.status < 500) {\n                let msg = this._responseHandler(xhr);\n                callback(msg);\n            }\n        };\n        xhr.ontimeout = (ev) => {\n            // GlobalFunction.ShowMsgTips(\"请求超时，请检查网络设置或稍后再试\");\n            netStateMgr.netWorkError();\n        };\n        xhr.onerror = (ev) => {\n            // GlobalFunction.ShowMsgTips(\n            //     \"网络连接失败，请检查网络设置或稍后再试\"\n            // );\n            netStateMgr.netWorkError();\n        };\n        xhr.open(\"POST\", url);\n        if (sys.isNative) {\n            xhr.setRequestHeader(\"Accept-Encoding\", \"gzip,deflate\");\n        }\n        xhr.setRequestHeader(\n            \"Content-type\",\n            \"application/x-www-form-urlencoded\"\n        );\n        xhr.timeout = 6000;\n        xhr.send(this._serializeData(data));\n    }\n\n    private _responseHandler(xhr: XMLHttpRequest):HttpMessage {\n        let msg = null;\n        if (xhr.readyState === 4 && xhr.status >= 200 && xhr.status != 404) {\n            msg = this._packMsg(0, JSON.parse(xhr.responseText));\n        } else if (xhr.status === 404) {\n            msg = this._packMsg(404, { error: \"404 page not found!\" });\n        } else if (xhr.readyState === 3) {\n            msg = this._packMsg(3, { error: \"Request dealing!\" });\n        } else if (xhr.readyState === 2) {\n            msg = this._packMsg(2, { error: \"Request received!\" });\n        } else if (xhr.readyState === 1) {\n            msg = this._packMsg(1, {\n                error:\n                    \"Server connection established! Request hasn't been received\",\n            });\n        } else if (xhr.readyState === 0) {\n            msg = this._packMsg(4, {\n                error: \"Request hasn't been initiated!\",\n            });\n        }\n\n        return msg;\n    }\n\n    private _packMsg(code: number, data: any) {\n        return new HttpMessage(code,data)\n    }\n\n    private _serializeData(datas: any) {\n        let serializeParams = \"\";\n        for (let variable in datas) {\n            serializeParams =\n                serializeParams + variable + \"=\" + datas[variable] + \"&\";\n        }\n        serializeParams = serializeParams.substring(\n            0,\n            serializeParams.length - 1\n        );\n        return serializeParams;\n    }\n\n    clear() {\n        httpMgr = null;\n    }\n}\n\n// ()();\nexport let httpMgr = (()=>{\n    return HttpMgr.getInstance<HttpMgr>();\n})();"]}