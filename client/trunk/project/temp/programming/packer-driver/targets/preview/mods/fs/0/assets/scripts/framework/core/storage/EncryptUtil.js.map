{"version":3,"sources":["file:///Users/steven/Workspaces/CocosCreatorProjects/3D/YYGameDemo/client/trunk/project/assets/scripts/framework/core/storage/EncryptUtil.ts"],"names":["aesEncrypt","msg","key","iv","encrypt","CryptoJS","AES","utf8Parse","mode","CBC","padding","pad","Pkcs7","toString","aesDecrypt","str","decrypt","enc","Utf8","stringify","utf8Str","parse","EncryptUtil"],"mappings":";;;;;;;;;;;;;;;;;AAaW,iBAASA,UAAT,CAAoBC,GAApB,EAAiCC,GAAjC,EAA8CC,EAA9C,EAAkE;AACrE,cAAIC,OAAO,GAAGC,QAAQ,CAACC,GAAT,CAAaF,OAAb,CAAqBH,GAArB,EAA0BM,SAAS,CAACL,GAAD,CAAnC,EAA0C;AACpDC,YAAAA,EAAE,EAAEI,SAAS,CAACJ,EAAD,CADuC;AAEpDK,YAAAA,IAAI,EAAEH,QAAQ,CAACG,IAAT,CAAcC,GAFgC;AAGpDC,YAAAA,OAAO,EAAEL,QAAQ,CAACM,GAAT,CAAaC;AAH8B,WAA1C,CAAd;AAKA,iBAAOR,OAAO,CAACS,QAAR,EAAP;AACH;;;;AASM,iBAASC,UAAT,CAAoBC,GAApB,EAAiCb,GAAjC,EAA8CC,EAA9C,EAAkE;AACrE,cAAIa,OAAO,GAAGX,QAAQ,CAACC,GAAT,CAAaU,OAAb,CAAqBD,GAArB,EAA0BR,SAAS,CAACL,GAAD,CAAnC,EAA0C;AACpDC,YAAAA,EAAE,EAAEI,SAAS,CAACJ,EAAD,CADuC;AAEpDK,YAAAA,IAAI,EAAEH,QAAQ,CAACG,IAAT,CAAcC,GAFgC;AAGpDC,YAAAA,OAAO,EAAEL,QAAQ,CAACM,GAAT,CAAaC;AAH8B,WAA1C,CAAd;AAKA,iBAAOP,QAAQ,CAACY,GAAT,CAAaC,IAAb,CAAkBC,SAAlB,CAA4BH,OAA5B,CAAP;AACH;;;;AAED,iBAAST,SAAT,CAAmBa,OAAnB,EAA4C;AACxC,iBAAOf,QAAQ,CAACY,GAAT,CAAaC,IAAb,CAAkBG,KAAlB,CAAwBD,OAAxB,CAAP;AACH;SAnCSE,W,2BAAAA,W","sourcesContent":["/**\n * @file EncryptUtil.ts\n * @description 一些加密解密方法\n */\n\nexport module EncryptUtil {\n    /**\n     * AES 加密\n     * @param msg \n     * @param key \n     * @param iv \n     * @returns \n     */\n    export function aesEncrypt(msg: string, key: string, iv: string): string {\n        let encrypt = CryptoJS.AES.encrypt(msg, utf8Parse(key), {\n            iv: utf8Parse(iv),\n            mode: CryptoJS.mode.CBC,\n            padding: CryptoJS.pad.Pkcs7\n        });\n        return encrypt.toString();\n    }\n\n    /**\n     * AES 解密\n     * @param str \n     * @param key \n     * @param iv \n     * @returns \n     */\n    export function aesDecrypt(str: string, key: string, iv: string): string {\n        let decrypt = CryptoJS.AES.decrypt(str, utf8Parse(key), {\n            iv: utf8Parse(iv),\n            mode: CryptoJS.mode.CBC,\n            padding: CryptoJS.pad.Pkcs7\n        });\n        return CryptoJS.enc.Utf8.stringify(decrypt);\n    }\n\n    function utf8Parse(utf8Str: string): string {\n        return CryptoJS.enc.Utf8.parse(utf8Str);\n    }\n}"]}