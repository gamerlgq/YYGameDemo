{"version":3,"sources":["file:///Users/steven/Workspaces/CocosCreatorProjects/3D/GameDemoReal/assets/scripts/framework/listener/EventMgr.ts"],"names":["EventMgr","ModelEventMgr","MsgEventMgr","ViewEventMgr","log","Singleton","constructor","_listeners","Map","_listenerHandleIndex","_waitAddListeners","_waitDelListeners","addEventListener","eventName","listener","get","set","handle","_isDispatchEventing","push","removeEventListener","key","cellMap","iterator","entries","r","next","done","v","value","delete","dispatchEvent","event","msgId","ret","forEach","splice","length","clear","modelEventMgr","msgEventMgr","viewEventMgr","getInstance"],"mappings":"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","sourcesContent":["import { log } from \"cc\";\nimport { Singleton } from \"../components/Singleton\";\nimport { Message } from \"./Message\";\n/*\n * @Author: liuguoqing\n * @Date: 2022-03-02 17:38:38\n * @LastEditors: liuguoqing\n * @LastEditTime: 2022-03-02 17:54:36\n * @Description: file content\n */\n\n\nexport interface EventCallback {\n    (event: Message):void | string | boolean;\n}\n\nexport class EventMgr extends Singleton {\n    // 字段\n    _listeners: Map<number, Map<string, EventCallback>>;\n    _listenerHandleIndex: number;\n\n    _isDispatchEventing = false;\n    _waitAddListeners: Array<[number, EventCallback, string]>;\n    _waitDelListeners: Map<string, number>;\n\n    // 构造函数\n    constructor() {\n        super();\n\n        this._listeners = new Map();\n        this._listenerHandleIndex = 0;\n        this._waitAddListeners = [];\n        this._waitDelListeners = new Map();\n    }\n\n    // 方法\n    addEventListener(eventName: number, listener: EventCallback): string {\n        if (this._listeners.get(eventName) == null) {\n            this._listeners.set(eventName, new Map());\n        }\n\n        ++this._listenerHandleIndex;\n        let handle = `HANDLE_${this._listenerHandleIndex}`;\n\n        if (this._isDispatchEventing) {\n            this._waitAddListeners.push([eventName, listener, handle]);\n            return handle;\n        }\n\n        this._listeners.get(eventName).set(handle, listener);\n        return handle;\n    }\n\n    removeEventListener(eventName: number, key: string) {\n        if (this._isDispatchEventing) {\n            this._waitDelListeners.set(key, eventName);\n            return;\n        }\n\n        let cellMap = this._listeners.get(eventName);\n        if (cellMap == null) return;\n        let iterator = cellMap.entries();\n        let r: IteratorResult<[string, EventCallback]>;\n        while (((r = iterator.next()), !r.done)) {\n            // cc.log(r);\n            let v = r.value;\n            let handle = v[0];\n            let listener = v[1];\n            if (key == handle || key == listener) {\n                cellMap.delete(handle);\n                break;\n            }\n        }\n    }\n\n    dispatchEvent(event: Message) {\n        this._isDispatchEventing = true;\n\n        let eventName = event.msgId;\n        if (this._listeners.get(eventName) == null) {\n            this._isDispatchEventing = false;\n            return;\n        }\n\n        let cellMap = this._listeners.get(eventName);\n        if (cellMap == null) return;\n        let iterator = cellMap.entries();\n        let r: IteratorResult<[string, EventCallback]>;\n        while (((r = iterator.next()), !r.done)) {\n            // cc.log(r);\n            let v = r.value;\n            let handle = v[0];\n            let listener = v[1];\n\n            // is wait del, don't callback\n            if (this._waitDelListeners.get(handle) == null) {\n                let ret = listener(event);\n                if (ret == false) {\n                    log(\"Break: handle \", handle, \"  eventName\", eventName);\n                    break;\n                } else if (ret == \"__REMOVE__\") {\n                    cellMap.delete(handle);\n                }\n            }\n        }\n\n        //dispatchEvent end\n        this._isDispatchEventing = false;\n\n        this._waitAddListeners.forEach((value) => {\n            this._listeners.get(value[0]).set(value[2], value[1]);\n        });\n\n        this._waitDelListeners.forEach((value, key) => {\n            this.removeEventListener(value, key);\n        });\n\n        this._waitAddListeners.splice(0, this._waitAddListeners.length);\n        this._waitDelListeners.clear();\n    }\n\n    clear() {\n       \n    }\n}\n\nclass ModelEventMgr extends EventMgr {\n    clear() {\n        modelEventMgr = null;\n    }\n}\nclass MsgEventMgr extends EventMgr {\n    clear() {\n        msgEventMgr = null;\n    }\n}\nclass ViewEventMgr extends EventMgr {\n    clear() {\n        viewEventMgr = null;\n    }\n}\n\nexport let modelEventMgr = (()=>{\n    return ModelEventMgr.getInstance<ModelEventMgr>();\n})();\n\nexport let msgEventMgr = (()=>{\n    return MsgEventMgr.getInstance<MsgEventMgr>();\n})();\n\nexport let viewEventMgr = (()=>{\n    return ViewEventMgr.getInstance<ViewEventMgr>();\n})();\n"]}