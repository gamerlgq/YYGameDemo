{"version":3,"sources":["file:///Users/steven/Workspaces/CocosCreatorProjects/3D/GameDemoReal/assets/scripts/app/views/fight/action/ActionAddPrefab.ts"],"names":["ActionAddPrefab","instantiate","tween","ResourcesLoader","FightEvent","fightEventMgr","fightBloodMgr","FightConstant","ActionBase","add","data","animCfg","url","params","call","load","prefab","node","_customSetting","startCallback","endcallback","name","layer","_setRoleEffect","_setDialog","tar","target","config","addPart","FightUnitEffectPart","Front","addEffectFront","Head","Floot","addEffectBack","check","PrefabNode","Desc","send","Show_Dialog","_setCallbacks","com","endCallback","setStartCallback","setEndCallback"],"mappings":"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","sourcesContent":["import { instantiate, log, Node, Prefab, Tween, tween } from \"cc\";\nimport { ResourcesLoader } from \"../../../../framework/data/ResourcesLoader\";;\nimport { EffectBase } from \"../effect/Effect\";\nimport { FightEvent } from \"../event/FightEvent\";\nimport { FightEventDataType } from \"../event/FightEventDataType\";\nimport { fightEventMgr } from \"../event/FightEventMgr\";\nimport { fightBloodMgr } from \"../FightBloodMgr\";\nimport { FightConstant } from \"../FightConstant\";\nimport { ActionBase } from \"./Action\";\nimport { FightActionData } from \"./FightActionMgr\";\n\n\nexport class ActionAddPrefab extends ActionBase {\n    \n    /**\n     * \n     * @param data FightActionData\n     * @returns Tween<Node>\n     */\n    public add(data:FightActionData):Tween<Node>{\n        let animCfg = data.animCfg;\n        let url = animCfg.params[0];\n        return tween().call(()=>{\n            ResourcesLoader.load(url,(prefab:Prefab)=>{\n                let node = instantiate(prefab);\n                this._customSetting(data,node);\n            })\n        })\n    }\n\n    private _customSetting(data:FightActionData,node:Node,startCallback?:Function,endcallback?:Function){\n        let animCfg = data.animCfg;\n        let name = animCfg.layer;\n        switch (name) {\n            case \"ROLE\":\n                this._setRoleEffect(data,node);\n                break;\n            case \"DIALOG\":\n                this._setDialog(data,node);\n                break;\n        }\n    }\n\n    // 设置角色身上特效\n    private _setRoleEffect(data:FightActionData,node:Node) {\n        let tar = data.target;\n        // let com = node.getComponent(EffectBase) as EffectBase;\n        let config = data.animCfg;\n        let addPart = config[2];//添加部位\n        if (addPart) {\n            switch (addPart) {\n                case FightConstant.FightUnitEffectPart.Front:\n                    tar.addEffectFront(node);\n                    break;\n                case FightConstant.FightUnitEffectPart.Head:\n                    \n                    break;\n                case FightConstant.FightUnitEffectPart.Floot:\n                    tar.addEffectBack(node);\n                    break;\n            }\n        }else{\n            // 默认特效添加在胸前\n            tar.addEffectFront(node);\n        }\n\n        fightBloodMgr.check(data);\n    }\n\n    // 设置对话框\n    private _setDialog(data:FightActionData,node:Node) {\n        let animCfg = data.animCfg;\n        let params:FightEventDataType.Show_Dialog = {\n            PrefabNode: node,\n            Desc: animCfg.params[1]\n        }\n        fightEventMgr?.send(new FightEvent(FightConstant.FightEvent.Show_Dialog,params))\n    }\n\n    // EffectBase 组件有两个 callback 可以设置\n    private _setCallbacks<T extends EffectBase>(com:T,startCallback?:Function,endCallback?:Function) {\n        com.setStartCallback(()=>{\n            if (startCallback) {\n                startCallback();\n            }\n        })\n\n        com.setEndCallback(()=>{\n            if (endCallback) {\n                endCallback();\n            }\n        });\n    }\n}"]}