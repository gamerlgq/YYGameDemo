{"version":3,"sources":["file:///Users/steven/Workspaces/CocosCreatorProjects/3D/YYGameDemo/client/trunk/project/assets/scripts/framework/core/SceneMgr.ts"],"names":["SceneMgr","find","instantiate","log","Node","Widget","widgetManager","ShowBackgroundMgr","viewRegisterMgr","MainEventTrigger","TouchMain","Singleton","ResourcesLoader","viewEventMgr","Message","TableLayer","setNodeVisible","sceneTriggerMgr","constructor","init","_layerMap","Map","_tableLayerStack","initAllScence","_initTouchGroup","clear","clearAllScence","sceneMgr","createNode","flag","parent","node","name","widget","addComponent","alignMode","AlignMode","ON_WINDOW_RESIZE","alignFlags","AlignFlags","HORIZONTAL","VERTICAL","left","right","bottom","top","viewRoot","addChild","set","get","layers","index","length","element","layer","removeFromParent","destroy","checkLayerWithName","pClassName","layerList","getCurLayerList","data","curLayerList","updataCurLayerList","getCurFrontLayer","SceneList","pushNewTableLayer","_viewIndex","tableLayer","push","appendTabSubContent","appendSubContent","popTabSubContent","isRemove","popSubContent","isEmpty","removeTableLayer","popTabSubContentWithoutEmpty","getTopTableLayer","popTableLayer","pop","contentLayer","getContentLayer","_decResRef","_hideTableLayer","check","checkNeedToRelease","releaseUnusedAssets","removeTableLayerWithName","pViewName","isContain","xdata","removeAllTableLayer","replaceTableUIContent","layerName","uiLayer","getUILayer","children","removeAllChildren","replaceTableBg","bgLayer","getBgLayer","addMainEventTrigger","replaceTableContent","_addResRef","clearAll","add","show","appendTableContent","switchTableContent","switch","replaceMainLayer","mainLayer","i","c","_clearAllResCount","addResRef","decResRef","clearAllRef","getNowMainLayer","addTransitionLayer","transloadinglayer","removeTransitionLayer","forEach","appendTips","tipsLayer","getTipsLayer","replaceDialog","removeDialog","isAll","childrens","setSystemOpenLayer","systemOpenGroup","getSystemOpenLayer","setNewGuideLayer","group","getNewGuideLayer","setPreLoadingLayer","getPreLoadingLayer","addTouchGroupLayer","getTouchGroupLayer","nextCanVisible","isBreakOut","LayerData","showLayerName","topLayerName","dialogLayer","visiable","list","cellTable","cellLayerName","getLayerName","setContentLayerVisible","tableElementList","k","tableElement","checkIsShowBlackground","mainLayerName","getCellLayer","tableList","zOrderIndex","cellElementList","cellElement","cell","getSiblingIndex","getSubContent","sort","a","b","sendCreateView","UiFlag","msg","dispatchEvent","showNetLoading","isShow","netloading","active","viewInfo","getViewInfo","loadWithViewInfo","getInstance"],"mappings":"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","sourcesContent":["\nimport { Asset, find, instantiate, log, Node, Prefab, resources, UIOpacity, UITransform, Widget, widgetManager } from \"cc\";\nimport { ShowBackgroundMgr } from \"../../app/define/ShowBackgroundMgr\";\nimport { viewRegisterMgr } from \"../../app/define/ViewRegisterMgr\";\nimport { MainEventTrigger } from \"../../app/views/common/MainEventTrigger\";\nimport { TouchEffect } from \"../../app/views/common/TouchEffect\";\nimport { TouchMain } from \"../../app/views/common/TouchMain\";\nimport { Singleton } from \"../components/Singleton\";\nimport { ResourcesLoader } from \"../data/ResourcesLoader\";\nimport { viewEventMgr } from \"../listener/EventMgr\";\nimport { Message } from \"../listener/Message\";\nimport { TableLayer } from \"../ui/TableLayer\";\nimport { setNodeVisible } from \"../utils/functions\";\nimport { sceneTriggerMgr } from \"../utils/SceneTriggerMgr\";\n// import { functions, ShowBackgroundMgr, Message, TableLayer, viewEventMgr } from \"../yy\";\n\nclass SceneMgr extends Singleton {\n    _layerMap: Map<string, Node>;\n    _tableLayerStack: Array<TableLayer>;\n    _viewIndex: number = 0;\n\n\n    // 构造函数\n    private constructor() {\n        super();\n    }\n\n    init() {\n        this._layerMap = new Map();\n        this._tableLayerStack = [];\n        this.initAllScence();\n        this._initTouchGroup()\n    }\n\n    clear() {\n        this.clearAllScence();\n        sceneMgr = null;\n    }\n\n    private createNode(flag: string, parent?: Node): Node {\n        let node = new Node\n        node.name = flag\n\n        let widget = node.addComponent(Widget)\n        // let rootNode = find(\"Canvas\");\n        widget!.alignMode = Widget.AlignMode.ON_WINDOW_RESIZE;\n        widget!.alignFlags = widgetManager.AlignFlags.HORIZONTAL | widgetManager.AlignFlags.VERTICAL;\n        // widget!.target = rootNode;\n        widget!.left = 0;\n        widget!.right = 0;\n        widget!.bottom = 0;\n        widget!.top = 0;\n        // widget.target = rootNode\n\n\n        let viewRoot = find(\"Canvas/views\")\n        viewRoot.addChild(node)\n\n        return node\n    }\n\n    private initAllScence() {\n        this._layerMap.set(\"MainGroup\", this.createNode(\"__MainGroup\")); // 主界面层\n        this._layerMap.set(\"TableGroup\", this.createNode(\"__TableGroup\")); // 页卡层\n        this._layerMap.set(\"MainEventTrigger\", this.createNode(\"__MainEventTrigger\")); // 全局事件触发层\n        this._layerMap.set(\"TransitionGroup\", this.createNode(\"__TransitionGroup\")); // 过渡层\n        this._layerMap.set(\"NewGuideGroup\", this.createNode(\"__NewGuideGroup\")); // 新手引导层\n        this._layerMap.set(\"DialogGroup\", this.createNode(\"__DialogGroup\")); // 对话框层\n        this._layerMap.set(\"SystemOpenGroup\", this.createNode(\"__SystemOpenGroup\")); // 功能开启层\n        this._layerMap.set(\"PreLoadingGroup\", this.createNode(\"__PreLoadingGroup\")); // 加载层\n        this._layerMap.set(\"TipsGroup\", this.createNode(\"__TipsGroup\")); // 弹出提示\n        this._layerMap.set(\"NetLoading\", this.createNode(\"__NetLoading\")); // 网络转圈层\n        this._layerMap.set(\"TouchGroup\", this.createNode(\"__TouchGroup\")); // 触摸反馈\n    }\n\n    private _initTouchGroup() {\n        this._layerMap.get(\"TouchGroup\").addComponent(TouchMain)\n    }\n\n    private clearAllScence() {\n        let layers = [\n            \"MainGroup\",\n            \"TableGroup\",\n            \"MainEventTrigger\",\n            \"TransitionGroup\",\n            \"NewGuideGroup\",\n            \"DialogGroup\",\n            \"SystemOpenGroup\",\n            \"PreLoadingGroup\",\n            \"TipsGroup\",\n            \"NetLoading\",\n            \"TouchGroup\",\n        ];\n        for (let index = 0; index < layers.length; index++) {\n            const element = layers[index];\n            let layer = this._layerMap.get(element);\n            layer.removeFromParent();\n            layer.destroy();\n        }\n    }\n\n    /**\n     * @description: 检查当前场景列表是否存在某个界面\n     * @param {string}\n     * @return {[boolean, Node]}\n     */\n    public checkLayerWithName(pClassName: string): any {\n        let layerList = this.getCurLayerList();\n        for (let index = 0; index < layerList.length; index++) {\n            const data = layerList[index];\n            if (data.name == pClassName) {\n                return [true, data];\n            }\n        }\n        return [false];\n    }\n\n    /**\n     * @description: 获取当前场景列表\n     * @param {null}\n     * @return {Array<Node>}\n     */\n    public getCurLayerList() {\n        let curLayerList = this.updataCurLayerList();\n        return curLayerList;\n    }\n\n    /**\n     * @description:获取当前最高层\n     * @param {null}\n     * @return {Node}\n     */\n    public getCurFrontLayer() {\n        let SceneList = this.getCurLayerList();\n        return SceneList[SceneList.length - 1];\n    }\n\n    /**\n     * @description: 新建一个Table层 (三层)\n     * @param {type}\n     * @return {type}\n     */\n    pushNewTableLayer(): TableLayer {\n        this._viewIndex += 1;\n        let tableLayer = new TableLayer();\n        tableLayer.name = \"TableLayer\" + this._viewIndex;\n        this._layerMap.get(\"TableGroup\").addChild(tableLayer);\n        this._tableLayerStack.push(tableLayer);\n        return tableLayer;\n    }\n\n    /**\n     * @description:叠加子页卡内容层\n     * @param {type}\n     * @return {type}\n     *  @deprecated\n     */\n    appendTabSubContent(layer: Node) {\n        let tableLayer = this._tableLayerStack[this._tableLayerStack.length - 1];\n        if (tableLayer == null) {\n            tableLayer = this.pushNewTableLayer();\n        }\n        tableLayer.appendSubContent(layer);\n\n        // let newGuideModel = GameMgr.getInstance().getModel(\"ModelNewGuide\");\n        // if (newGuideModel) {\n        //     newGuideModel.checkClearGuide();\n        // }\n    }\n\n    /**\n     * @description: 弹出子页卡内容层中的最上层\n     * @param {type}\n     * @return {type}\n     *  @deprecated\n     */\n    popTabSubContent() {\n        let tableLayer = this._tableLayerStack[this._tableLayerStack.length - 1];\n        if (tableLayer != null) {\n            let isRemove = tableLayer.popSubContent();\n            if (tableLayer.isEmpty()) {\n                this.removeTableLayer();\n            }\n            return isRemove;\n        }\n\n        return false;\n    }\n\n    /**\n     * @description: 弹出子页卡内容层中的最上层,如果没有则不处理，不会弹出住页卡\n     * @param {type}\n     * @return {type}\n     *  @deprecated\n     */\n    popTabSubContentWithoutEmpty() {\n        let tableLayer = this._tableLayerStack[this._tableLayerStack.length - 1];\n        if (tableLayer != null) {\n            let isRemove = tableLayer.popSubContent();\n            return isRemove;\n        }\n        return false;\n    }\n\n    /**\n     * @description: 获取最上层的 TableLayer\n     * @param {type}\n     * @return {type}\n     */\n    getTopTableLayer() {\n        let tableLayer = this._tableLayerStack[this._tableLayerStack.length - 1];\n        return tableLayer;\n    }\n\n    /**\n     * @description: 弹出一个Table层\n     * @param {type}\n     * @return {type}\n     */\n    popTableLayer() {\n        this.removeTableLayer();\n    }\n\n    /**\n     * @description: 清空顶层页卡层\n     * @param {type}\n     * @return {type}\n     */\n    removeTableLayer() {\n        let tableLayer = this._tableLayerStack.pop();\n        if (tableLayer) {\n\n            //移除引用\n            let contentLayer = tableLayer.getContentLayer()\n            this._decResRef(contentLayer.name)\n\n            tableLayer.removeFromParent();\n            tableLayer.destroy();\n\n            this._hideTableLayer();\n\n            //场景触发\n            sceneTriggerMgr.check()\n\n            //检查内存释放\n            if (ResourcesLoader.checkNeedToRelease()) {\n                ResourcesLoader.releaseUnusedAssets()\n            }\n            return true;\n        }\n        return false;\n    }\n\n    removeTableLayerWithName(pViewName, isContain) {\n        let xdata = this.checkLayerWithName(pViewName);\n        if (xdata[0] == false) {\n            return;\n        }\n\n        let layerList = this.getCurLayerList();\n\n        for (let index = layerList.length - 1; index >= 0; index--) {\n            const data = layerList[index];\n            if (data.name == pViewName) {\n                if (isContain) {\n                    this.popTableLayer();\n                    return;\n                }\n            } else {\n                this.popTableLayer();\n            }\n        }\n    }\n\n    /**\n     * @description: 清空全部页卡层\n     * @param {type}\n     * @return {type}\n     */\n    removeAllTableLayer() {\n        let length = this._tableLayerStack.length;\n        for (let index = 0; index < length; index++) {\n            // if (this._tableLayerStack.length >= 2) {\n            //     let tableLayer = this._tableLayerStack.pop();\n            //     tableLayer.removeFromParent();\n            //     tableLayer.destroy();\n            // } else {\n                this.removeTableLayer();\n            // }\n        }\n    }\n\n    /**\n     * @description: 替换页卡UI层\n     * @param {type}\n     * @return {type}\n     */\n    replaceTableUIContent(layer, layerName: string) {\n        let tableLayer = this._tableLayerStack[this._tableLayerStack.length - 1];\n        if (tableLayer == null) {\n            tableLayer = this.pushNewTableLayer();\n        }\n        let uiLayer = tableLayer.getUILayer();\n        if (this.checkLayerWithName(layerName)[0] == true) {\n            if (uiLayer.children.length == 0) {\n                this.popTableLayer();\n            }\n            return;\n        }\n        uiLayer.removeAllChildren();\n        uiLayer.name = layerName || \"\";\n        uiLayer.addChild(layer);\n        this._hideTableLayer();\n\n        // let newGuideModel = GameMgr.getInstance().getModel(\"ModelNewGuide\");\n        // if (newGuideModel) {\n        //     newGuideModel.checkClearGuide();\n        // }\n    }\n\n    /**\n     * @description: 替换页卡背景层\n     * @param {type}\n     * @return {type}\n     *  @deprecated\n     */\n\n    replaceTableBg(layer: Node, layerName: string) {\n        let tableLayer = this._tableLayerStack[this._tableLayerStack.length - 1];\n        if (tableLayer == null) {\n            tableLayer = this.pushNewTableLayer();\n        }\n\n        let bgLayer = tableLayer.getBgLayer();\n        if (this.checkLayerWithName(layerName)[0] == true) {\n            if (bgLayer.children.length == 0) {\n                this.popTableLayer();\n            }\n            return;\n        }\n        bgLayer.name = layerName || \"\";\n        bgLayer.removeAllChildren();\n        bgLayer.addChild(layer);\n        this._hideTableLayer();\n\n        // let newGuideModel = GameMgr.getInstance().getModel(\"ModelNewGuide\");\n        // if (newGuideModel) {\n        //     newGuideModel.checkClearGuide();\n        // }\n    }\n\n    addMainEventTrigger() {\n        this._layerMap.get(\"MainEventTrigger\").addComponent(MainEventTrigger)\n    }\n    /**\n     * @description: 替换页卡内容层\n     * @param {type}\n     * @return {type}\n     */\n    replaceTableContent(layer: Node, layerName: string) {\n        let tableLayer = this._tableLayerStack[this._tableLayerStack.length - 1];\n\n        if (tableLayer == null) {\n            tableLayer = this.pushNewTableLayer();\n        }\n\n        let contentLayer = tableLayer.getContentLayer();\n\n        // 判断是否重复打开\n        if (this.checkLayerWithName(layerName)[0] == true) {\n            if (contentLayer.isEmpty()) {\n                this.popTableLayer();\n            }\n            return;\n        }\n\n        //移除引用\n        this._decResRef(contentLayer.name)\n        this._addResRef(layerName)\n        contentLayer.name = layerName || \"\";\n        contentLayer.clearAll();\n        contentLayer.add(layer);\n        contentLayer.show();\n\n        this._hideTableLayer();\n\n        // let newGuideModel = GameMgr.getInstance().getModel(\"ModelNewGuide\");\n        // if (newGuideModel) {\n        //     newGuideModel.checkClearGuide();\n        // }\n        return tableLayer;\n    }\n\n    /**\n     * @description: 追加页卡内容层\n     * @param {type}\n     * @return {type}\n     */\n    appendTableContent(layer, tableLayer?) {\n        if (tableLayer == null) {\n            tableLayer = this._tableLayerStack[this._tableLayerStack.length - 1];\n        }\n\n        let contentLayer = tableLayer.getContentLayer();\n        contentLayer.add(layer);\n        this._hideTableLayer();\n        // let newGuideModel = GameMgr.getInstance().getModel(\"ModelNewGuide\");\n        // if (newGuideModel) {\n        //     newGuideModel.checkClearGuide();\n        // }\n    }\n\n    /**\n     * @description: 切换页卡内容层\n     * @param {type}\n     * @return {type}\n     */\n    switchTableContent(index, tableLayer) {\n        if (tableLayer == null) {\n            tableLayer = this._tableLayerStack[this._tableLayerStack.length - 1];\n        }\n\n        let contentLayer = tableLayer.getContentLayer();\n        contentLayer.switch(index);\n        contentLayer.show();\n\n        // let newGuideModel = GameMgr.getInstance().getModel(\"ModelNewGuide\");\n        // if (newGuideModel) {\n        //     newGuideModel.checkClearGuide();\n        // }\n    }\n\n    // public setSkipHiddenBackgroundList(list) {\n    //     this._skipHiddenBackground = list;\n    // }\n\n    public replaceMainLayer(layer: Node, layerName: string) {\n        this.removeAllTableLayer();\n        let mainLayer = this._layerMap.get(\"MainGroup\");\n        for (let i = 0; i < mainLayer.children.length; i++) {\n            const c = mainLayer.children[i];\n            c.removeFromParent();\n            c.destroy();\n        }\n\n        layer.name = layerName || \"\";\n        mainLayer.addChild(layer);\n\n        this._clearAllResCount()\n        \n        //主界面引用+1\n        this._addResRef(layerName)\n\n        sceneTriggerMgr.check()\n        // let newGuideModel = GameMgr.getInstance().getModel(\"ModelNewGuide\");\n        // if (newGuideModel) {\n        //     newGuideModel.checkClearGuide();\n        // }\n    }\n\n    //一个资源添加引用计数\n    private _addResRef(name: string) {\n        ResourcesLoader.addResRef(name);\n    }\n\n    //删除一个资源引用计数\n    private _decResRef(name: string) {\n        ResourcesLoader.decResRef(name);\n    }\n\n\n    //清除动态加载的引用\n    private _clearAllResCount() {\n        ResourcesLoader.clearAllRef()\n    }\n\n    getNowMainLayer() {\n        let mainLayer = this._layerMap.get(\"MainGroup\");\n        let layer = mainLayer.children[0];\n        return layer;\n    }\n\n    /**\n     * @description 添加过渡界面\n     * @param transloadinglayer \n     */\n    addTransitionLayer(transloadinglayer:Node) {\n        this._layerMap.get(\"TransitionGroup\").addChild(transloadinglayer);\n    }\n\n    /**\n     * @description 移除过渡界面\n     */\n    removeTransitionLayer(){\n        let children = this._layerMap.get(\"TransitionGroup\").children;\n        if (children.length > 0){\n            children.forEach((node:Node)=>{\n                node.removeFromParent();\n                node.destroy();\n            })\n        }\n    }\n    /**\n     * @description: tips层\n     * @param {*} tips_layer\n     * @return {*}\n     */\n    appendTips(tipsLayer) {\n        this._layerMap.get(\"TipsGroup\").addChild(tipsLayer);\n    }\n\n    getTipsLayer() {\n        return this._layerMap.get(\"TipsGroup\");\n    }\n\n    replaceDialog(layer) {\n        this._layerMap.get(\"DialogGroup\").addChild(layer);\n        // let newGuideModel = GameMgr.getInstance().getModel(\"ModelNewGuide\");\n        // if (newGuideModel) {\n        //     newGuideModel.checkClearGuide();\n        // }\n\n        this._hideTableLayer();\n    }\n\n    removeDialog(isAll: boolean = false) {\n        let childrens = this._layerMap.get(\"DialogGroup\").children;\n        for (let index = 0; index < childrens.length; index++) {\n            const c = childrens[index];\n            c.removeFromParent();\n            c.destroy();\n\n            if (!isAll) {\n                break;\n            }\n        }\n\n        this._hideTableLayer();\n    }\n\n\n    //功能开启监听层\n    setSystemOpenLayer(layer) {\n        let systemOpenGroup = this._layerMap.get(\"SystemOpenGroup\");\n        for (let index = 0; index < systemOpenGroup.children.length; index++) {\n            const element = systemOpenGroup.children[index];\n            element.removeFromParent();\n            element.destroy();\n        }\n        if (layer) {\n            systemOpenGroup.addChild(layer);\n        }\n    }\n\n    getSystemOpenLayer() {\n        return this._layerMap.get(\"SystemOpenGroup\").children[0];\n    }\n\n    //新手引导层\n    setNewGuideLayer(layer) {\n        let group = this._layerMap.get(\"NewGuideGroup\");\n        for (let index = 0; index < group.children.length; index++) {\n            const element = group.children[index];\n            element.removeFromParent();\n            element.destroy();\n        }\n        if (layer) {\n            group.addChild(layer);\n        }\n    }\n\n    getNewGuideLayer() {\n        return this._layerMap.get(\"NewGuideGroup\").children[0];\n    }\n\n    //加载层\n    setPreLoadingLayer(layer) {\n        let group = this._layerMap.get(\"PreLoadingGroup\");\n        for (let index = 0; index < group.children.length; index++) {\n            const element = group.children[index];\n            element.removeFromParent();\n            element.destroy();\n        }\n        if (layer) {\n            group.addChild(layer);\n        }\n    }\n\n    getPreLoadingLayer() {\n        return this._layerMap.get(\"PreLoadingGroup\").children[0];\n    }\n\n\n    // 添加触摸反馈层\n    addTouchGroupLayer(layer) {\n        let group = this._layerMap.get(\"TouchGroup\");\n        if (layer) {\n            group.addChild(layer);\n        }\n    }\n\n    // 获取所有触摸返回层\n    getTouchGroupLayer() {\n        let group = this._layerMap.get(\"TouchGroup\");\n        return group;\n    }\n\n    /**\n     * @description: Table游戏层操作: 隐藏低层次的层\n     * @param {type}\n     * @return {type}\n     */\n    private _hideTableLayer() {\n\n        // 遍历所有子节点\n        let nextCanVisible = 0;\n        let isBreakOut = false;\n\n        let LayerData = [];\n        let showLayerName = \"\";\n        let topLayerName = \"\";\n\n        let dialogLayer = this._layerMap.get(\"DialogGroup\");\n        if (dialogLayer.children.length > 0) {\n            if (topLayerName == \"\") {\n                topLayerName = \"DialogLayer\";\n            }\n\n            showLayerName = \"DialogLayer\";\n            LayerData.push({\n                name: \"DialogLayer\",\n                visiable: true,\n            });\n        }\n\n        let list = this._layerMap.get(\"TableGroup\").children;\n        for (let index = list.length - 1; index >= 0; index--) {\n            let cellTable = <TableLayer>list[index];\n            let cellLayerName = cellTable.getLayerName();\n            if (topLayerName == \"\") {\n                topLayerName = cellLayerName;\n            }\n\n            // 有背景挡住，后面的都可以不显示\n            if (isBreakOut) {\n                // cellTable.opacity = 0;\n                setNodeVisible(cellTable, false)\n                cellTable.setContentLayerVisible(false);\n                LayerData.push({\n                    name: cellLayerName,\n                    visiable: false,\n                });\n                continue;\n            }\n\n            // cellTable.opacity = 255;\n            setNodeVisible(cellTable, true)\n            cellTable.setContentLayerVisible(true);\n            nextCanVisible = 0;\n\n            showLayerName = cellLayerName;\n            LayerData.push({\n                name: cellLayerName,\n                visiable: true,\n            });\n\n            let tableElementList = cellTable.children; //一个table层里面有4个子节点\n            for (let k = 0; k < tableElementList.length; k++) {\n                const tableElement = tableElementList[k];\n                // 检查是否有屏蔽下一层标志\n                // if (this._skipHiddenBackground[tableElement.name]) {\n                if (ShowBackgroundMgr.checkIsShowBlackground(tableElement.name)) {\n                    nextCanVisible = 1;\n                }\n            }\n\n            // 如果背后已经挡住不显示\n            if (nextCanVisible > 0) {\n                isBreakOut = false;\n            } else {\n                isBreakOut = true;\n            }\n\n            continue;\n        }\n\n        let mainLayer = this._layerMap.get(\"MainGroup\");\n\n        if (mainLayer.children.length > 0) {\n            let mainLayerName = mainLayer.children[0].name;\n            if (topLayerName == \"\") {\n                topLayerName = mainLayerName;\n            }\n\n            if (nextCanVisible > 0 || list.length == 0) {\n                // mainLayer.opacity = 255;\n                setNodeVisible(mainLayer, true)\n                showLayerName = mainLayerName;\n                LayerData.push({\n                    name: mainLayerName,\n                    visiable: true,\n                });\n            } else {\n                // mainLayer.opacity = 0;\n                setNodeVisible(mainLayer, false)\n                LayerData.push({\n                    name: mainLayerName,\n                    visiable: false,\n                });\n            }\n        }\n\n        // let msg = new SFMessage(-9999999, {\n        //     topShow: topLayerName,\n        //     lastShow: showLayerName,\n        //     layerList: LayerData,\n        // });\n        // MsgEventMgr.getInstance().dispatchEvent(msg);\n    }\n\n    private getCellLayer(tableLayer: Node, tableList, zOrderIndex: number) {\n        // 分3层\n        let cellElementList = tableLayer.children;\n        for (let index = 0; index < cellElementList.length; index++) {\n            const cellElement = cellElementList[index];\n            let cell = {};\n            cell[\"obj\"] = cellElement;\n            cell[\"name\"] = tableLayer.name;\n            cell[\"zOrder\"] = cellElement.getSiblingIndex() + zOrderIndex + index;\n            tableList.push(cell);\n        }\n    }\n    /**\n     * @description: 更新当前场景列表\n     * @param {type}\n     * @return {type}\n     */\n    private updataCurLayerList() {\n        // tabel层检查\n        let curLayerList = [];\n\n        this._tableLayerStack.forEach((tableLayer, i) => {\n            this.getCellLayer(tableLayer.getBgLayer(), curLayerList, i * 100 + 1 * 10);\n            this.getCellLayer(tableLayer.getContentLayer(), curLayerList, i * 100 + 2 * 10);\n            this.getCellLayer(tableLayer.getUILayer(), curLayerList, i * 100 + 3 * 10);\n            this.getCellLayer(tableLayer.getSubContent(), curLayerList, i * 100 + 4 * 10);\n        });\n\n        // 主界面检查\n        this.getCellLayer(this._layerMap.get(\"MainGroup\"), curLayerList, 10);\n\n        // 跟新z轴排序\n        curLayerList.sort((a: Node, b: Node) => {\n            return a[\"zOrder\"] - b[\"zOrder\"];\n        });\n        return curLayerList;\n    }\n\n    public sendCreateView(UiFlag: number, data?: any) {\n        log(\"send create view:\" + UiFlag)\n        let msg = new Message(UiFlag, data);\n        viewEventMgr.dispatchEvent(msg);\n    }\n\n    /**\n     * showNetLoading\n     */\n    public showNetLoading(isShow:boolean) {\n        let netloading = this._layerMap.get(\"NetLoading\").children[0]\n        if (netloading) {\n            netloading.active = isShow\n            return\n        }\n\n        let viewInfo = viewRegisterMgr.getViewInfo(\"commonUI\", \"netloading\");\n        ResourcesLoader.loadWithViewInfo(viewInfo,(data:Prefab)=>{\n            let node = instantiate(data)\n            node.active = isShow\n            this._layerMap.get(\"NetLoading\").addChild(node)\n        }, false)\n    }\n}\n\n\nexport let sceneMgr = (() => {\n    return SceneMgr.getInstance<SceneMgr>();\n})();"]}