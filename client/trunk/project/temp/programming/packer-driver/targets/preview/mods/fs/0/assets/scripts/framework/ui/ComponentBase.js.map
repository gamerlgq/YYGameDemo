{"version":3,"sources":["file:///Users/steven/Workspaces/CocosCreatorProjects/3D/GameDemoReal/assets/scripts/framework/ui/ComponentBase.ts"],"names":["ComponentBase","Component","msgEventMgr","constructor","_eventMsgListeners","Map","start","onLoad","onEnable","onDisable","onDestroy","removeAllMsgListener","addMsgListener","msgId","listener","handle","addEventListener","get","set","removeMsgListener","forEach","value","key","removeEventListener","delete","clear"],"mappings":";;;sDAYaA,a;;;;;;;;;;;;;;;AALJC,MAAAA,S,OAAAA,S;;AACAC,MAAAA,W,iBAAAA,W;;;;;;;+BAIIF,a,GAAN,MAAMA,aAAN,SAA4BC,SAA5B,CAAsC;AAGzCE,QAAAA,WAAW,GAAG;AACV;;AADU;;AAEV,eAAKC,kBAAL,GAA0B,IAAIC,GAAJ,EAA1B;AACH;;AAEDC,QAAAA,KAAK,GAAG,CAAE;AAGV;AACJ;AACA;;;AACIC,QAAAA,MAAM,GAAG,CAAE;;AAEXC,QAAAA,QAAQ,GAAG,CAAE;;AAEbC,QAAAA,SAAS,GAAG,CAAE;AAEd;AACJ;AACA;AACA;;;AACIC,QAAAA,SAAS,GAAG;AACR,eAAKC,oBAAL;AACH;AAED;AACJ;AACA;;;AACIC,QAAAA,cAAc,CAACC,KAAD,EAAgBC,QAAhB,EAAwC;AAClD,cAAIC,MAAM,GAAG;AAAA;AAAA,0CAAYC,gBAAZ,CACTH,KADS,EAETC,QAFS,CAAb;AAIA,cAAI,KAAKV,kBAAL,CAAwBa,GAAxB,CAA4BF,MAA5B,KAAuC,IAA3C,EAAiD;;AAEjD,eAAKX,kBAAL,CAAwBc,GAAxB,CAA4BH,MAA5B,EAAoCF,KAApC;AACH;AAED;AACJ;AACA;AACA;;;AACIM,QAAAA,iBAAiB,CAACN,KAAD,EAAgB;AAC7B,eAAKT,kBAAL,CAAwBgB,OAAxB,CAAgC,CAACC,KAAD,EAAQC,GAAR,KAAgB;AAC5C,gBAAID,KAAK,IAAIR,KAAb,EAAoB;AAChB;AAAA;AAAA,8CAAYU,mBAAZ,CAAgCF,KAAhC,EAAuCC,GAAvC;;AACA,mBAAKlB,kBAAL,CAAwBoB,MAAxB,CAA+BF,GAA/B;AACH;AACJ,WALD;AAMH;AAED;AACJ;AACA;;;AACIX,QAAAA,oBAAoB,GAAG;AACnB,eAAKP,kBAAL,CAAwBgB,OAAxB,CAAgC,CAACC,KAAD,EAAQC,GAAR,KAAgB;AAC5C;AAAA;AAAA,4CAAYC,mBAAZ,CAAgCF,KAAhC,EAAuCC,GAAvC;;AACA,iBAAKlB,kBAAL,CAAwBoB,MAAxB,CAA+BF,GAA/B;AACH,WAHD;;AAIA,eAAKlB,kBAAL,CAAwBqB,KAAxB;AACH;;AA/DwC,O","sourcesContent":["/*\n * @Author: liuguoqing\n * @Date: 2022-03-04 23:09:26\n * @LastEditors: liuguoqing\n * @LastEditTime: 2022-03-05 15:09:10\n * @Description: file content\n */\nimport { Component } from \"cc\";\nimport { msgEventMgr } from \"../listener/EventMgr\";\n\ntype callbackFunc = (data: any) => void | string | boolean;\n\nexport class ComponentBase extends Component {\n    protected _eventMsgListeners: Map<string, number>;\n\n    constructor() {\n        super();\n        this._eventMsgListeners = new Map();\n    }\n\n    start() {}\n\n\n    /**\n     * 在组件加载的时候调用addMsgListener来监听消息\n     */\n    onLoad() {}\n\n    onEnable() {}\n\n    onDisable() {}\n\n    /**\n     * 记得如果需要要重写此方法 注意必须调用super.onDestroy(),\n     * 组件删除前会自动删除所有消息监听\n     */\n    onDestroy() {\n        this.removeAllMsgListener();\n    }\n\n    /**\n     * 添加网络消息监听\n     */\n    addMsgListener(msgId: number, listener: callbackFunc) {\n        let handle = msgEventMgr.addEventListener(\n            msgId,\n            listener\n        );\n        if (this._eventMsgListeners.get(handle) != null) return;\n\n        this._eventMsgListeners.set(handle, msgId);\n    }\n\n    /**\n     * 移除对这个消息的监听\n     * 某些情况node里面需要动态加减某个消息监听\n     */\n    removeMsgListener(msgId: number) {\n        this._eventMsgListeners.forEach((value, key) => {\n            if (value == msgId) {\n                msgEventMgr.removeEventListener(value, key);\n                this._eventMsgListeners.delete(key);\n            }\n        });\n    }\n\n    /**\n     * 去掉所有网络消息监听\n     */\n    removeAllMsgListener() {\n        this._eventMsgListeners.forEach((value, key) => {\n            msgEventMgr.removeEventListener(value, key);\n            this._eventMsgListeners.delete(key);\n        });\n        this._eventMsgListeners.clear;\n    }\n}\n"]}