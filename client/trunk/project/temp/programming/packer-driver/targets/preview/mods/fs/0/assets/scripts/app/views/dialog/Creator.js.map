{"version":3,"sources":["file:///Users/steven/Workspaces/CocosCreatorProjects/3D/GameDemoReal/assets/scripts/app/views/dialog/Creator.ts"],"names":["DialogCreator","instantiate","Prefab","sceneMgr","ResourcesLoader","ViewCreatorBase","ViewProtocol","viewRegisterMgr","Tips","Array","onInit","regMsg","DoubleBtnDialog","onCreateDoubleBtnDialogView","bind","onCreateTips","event","viewInfo","getViewInfo","loadWithViewInfo","data","addRef","node","pushNewTableLayer","replaceTableContent","View","isScheduled","_timer","_tempTipsQueue","push","_tipsQueue","setInterval","_tipsTick","length","clearInterval","shift","tipsNode","str","getRawData","getComponent","text","getTipsLayer","addChild"],"mappings":"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","sourcesContent":["import { instantiate, Prefab } from \"cc\";\nimport { sceneMgr } from \"../../../framework/core/SceneMgr\";\nimport { ResourcesLoader } from \"../../../framework/data/ResourcesLoader\";\nimport { Message } from \"../../../framework/listener/Message\";\nimport { ViewCreatorBase } from \"../../../framework/ui/ViewCreatorBase\";\nimport { ViewProtocol } from \"../../define/ViewProtocol\";\nimport { viewRegisterMgr } from \"../../define/ViewRegisterMgr\";\nimport { Tips } from \"./Tips\";\n\nexport class DialogCreator extends ViewCreatorBase {\n\n    private _tipsQueue:Array<Message> = new Array<Message>();\n    private _tempTipsQueue:Array<Message> = new Array<Message>();\n    private _timer: NodeJS.Timer = null;\n\n    // private _isDispatching:boolean = false;\n\n    onInit() {\n        this.regMsg(ViewProtocol.DoubleBtnDialog, this.onCreateDoubleBtnDialogView.bind(this))\n        this.regMsg(ViewProtocol.Tips, this.onCreateTips.bind(this))\n    }\n\n    onCreateDoubleBtnDialogView(event:Message) {\n        let viewInfo = viewRegisterMgr.getViewInfo(\"dialog\",\"DoubleBtnDialog\");\n        ResourcesLoader.loadWithViewInfo(viewInfo,(data:Prefab)=>{\n            data.addRef()\n            let node = instantiate(data);\n            // let com = node.getComponent(\"DoubleBtnDialog\").updateDialog(event.getRawData[0]);\n            sceneMgr.pushNewTableLayer();\n            sceneMgr.replaceTableContent(node,viewInfo.View);\n        })\n    }\n\n    onCreateTips(event:Message){\n        let isScheduled = this._timer ? true : false;\n        if (isScheduled) {\n            // 暂存队列\n            this._tempTipsQueue.push(event);\n            return;\n        }\n\n        this._tipsQueue.push(event);\n        this._timer = setInterval(this._tipsTick.bind(this),100);\n    }\n\n    _tipsTick(){\n        if (this._tipsQueue.length == 0) {\n            if (this._tempTipsQueue.length == 0 ){\n                clearInterval(this._timer);\n                this._timer = null;\n                return;\n            }\n            \n            this._tipsQueue = this._tempTipsQueue;\n            this._tempTipsQueue.length = 0;\n        }\n\n        let event:Message = this._tipsQueue.shift();\n        if (event){\n            let viewInfo = viewRegisterMgr.getViewInfo(\"dialog\",\"Tips\");\n            ResourcesLoader.loadWithViewInfo(viewInfo, (data:Prefab)=>{\n                let tipsNode = instantiate(data)\n                let str = event.getRawData()\n                tipsNode.getComponent(Tips).text = str;\n                sceneMgr.getTipsLayer().addChild(tipsNode)\n            }, Prefab)\n        }\n       \n    }\n}"]}