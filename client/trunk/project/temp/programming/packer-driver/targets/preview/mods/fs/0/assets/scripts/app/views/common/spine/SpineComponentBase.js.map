{"version":3,"sources":["file:///Users/steven/Workspaces/CocosCreatorProjects/3D/GameDemoReal/assets/scripts/app/views/common/spine/SpineComponentBase.ts"],"names":["_decorator","Node","sp","ComponentBase","Protocol","yy","FightBloodUI","ccclass","property","SpineComponentBase","onLoad","_init","addMsgListener","Inner","SetAnimationSpeed","_setSpineAnimationSpeed","bind","event","speed","getRawData","_spine","timeScale","_root","node","parent","spine","spineNode","getComponent","Skeleton","_initSpineListener","_initMix","setStartListener","_onAnimateStartCallback","setEndListener","_onAnimateEndCallback","setInterruptListener","_onAnimateInterruptCallback","setEventListener","_onAnimateEventCallback","_setMix","macro","HeroAnimate","Idle","Run","Die","Hurt","Jump","Skill01","Skill02","Attack","trackEntry","_animateStartCallback","_animateEndCallback","_animiateInterruptCallback","_animiateEventCallback","anim1","anim2","mixTime","findAnimation","setMix","_mixTime","play","actionName","isLoop","trackIndex","setAnimation","stop","paused","resume","clear","clearTrack","clearAll","clearTracks","setAnimateStartCallback","callback","setAnimateEndCallback","setAnimateInterruptCallback","setAnimateEventCallback","addEffectFront","offset","effectFontNode","addChild","position","addEffectBack","effectBackNode","addBloodUI","node_blood_ui","getChildByName","updateBlood","cur","top","com","getComponentInChildren","changeSkin","skinName","setSkin","findSlot","name","changeEquip","oldSlotName","newSlotName","skin_origin","_skeleton","skin","slot_origin","slot_new","attachment_new","getAttachment","setAttachment"],"mappings":"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","sourcesContent":["\nimport { _decorator, Component, Node, sp, log, Vec3, Texture2D, Prefab } from 'cc';\nimport { ResourcesLoader } from '../../../../framework/data/ResourcesLoader';\nimport { Message } from '../../../../framework/listener/Message';\nimport { ComponentBase } from '../../../../framework/ui/ComponentBase';\nimport { Protocol } from '../../../define/Protocol';\nimport { yy } from '../../../define/YYNamespace';\nimport { FightBloodUI } from '../../fight/ui/FightBloodUI';\nconst { ccclass, property } = _decorator;\n\n@ccclass('SpineComponentBase')\nexport class SpineComponentBase extends ComponentBase {\n  \n    @property(Node)\n    spineNode:Node = null;\n\n\n    @property(Node)\n    effectFontNode = null;\n\n    @property(Node)\n    effectBackNode = null;\n\n    private _spine:sp.Skeleton = null;\n\n    private _root:Node = null;\n\n    // private _attachedNodes:Map<string,Node> = new Map<string,Node>();\n\n    private _animateStartCallback: yy.interfaces.SpineTrackEntryCallFunc = null;\n\n    private _animateEndCallback: yy.interfaces.SpineTrackEntryCallFunc = null;\n\n    private _animiateInterruptCallback: yy.interfaces.SpineTrackEntryCallFunc = null;\n\n    private _animiateEventCallback: yy.interfaces.SpineFrameEventCallFunc = null;\n\n    private _mixTime = 0.1; //动作融合时间\n\n    onLoad () {\n        this._init();\n        this.addMsgListener(Protocol.Inner.SetAnimationSpeed,this._setSpineAnimationSpeed.bind(this))\n    }\n\n    private _setSpineAnimationSpeed(event:Message) {\n        let speed = event.getRawData();\n        this._spine.timeScale = speed;\n    }\n    \n    private _init() {\n        this._root = this.node.parent;\n        let spine = this.spineNode.getComponent(sp.Skeleton);\n        this._spine = spine;\n        this._initSpineListener();\n        this._initMix();\n    }\n\n    private _initSpineListener() {\n        if (!this._spine) {\n            return;\n        }\n\n        this._spine.setStartListener(this._onAnimateStartCallback.bind(this));\n        this._spine.setEndListener(this._onAnimateEndCallback.bind(this));\n        this._spine.setInterruptListener(this._onAnimateInterruptCallback.bind(this));\n        this._spine.setEventListener(this._onAnimateEventCallback.bind(this));\n    }\n\n    private _initMix() {\n        this._setMix(yy.macro.HeroAnimate.Idle, yy.macro.HeroAnimate.Run);\n        this._setMix(yy.macro.HeroAnimate.Idle, yy.macro.HeroAnimate.Die);\n        this._setMix(yy.macro.HeroAnimate.Idle, yy.macro.HeroAnimate.Hurt);\n        this._setMix(yy.macro.HeroAnimate.Idle, yy.macro.HeroAnimate.Jump);\n        this._setMix(yy.macro.HeroAnimate.Idle, yy.macro.HeroAnimate.Skill01);\n        this._setMix(yy.macro.HeroAnimate.Idle, yy.macro.HeroAnimate.Skill02);\n        this._setMix(yy.macro.HeroAnimate.Run, yy.macro.HeroAnimate.Hurt);\n        this._setMix(yy.macro.HeroAnimate.Run, yy.macro.HeroAnimate.Die);\n        this._setMix(yy.macro.HeroAnimate.Run, yy.macro.HeroAnimate.Attack);\n        this._setMix(yy.macro.HeroAnimate.Run, yy.macro.HeroAnimate.Jump);\n        this._setMix(yy.macro.HeroAnimate.Run, yy.macro.HeroAnimate.Skill01);\n        this._setMix(yy.macro.HeroAnimate.Run, yy.macro.HeroAnimate.Skill02);\n        this._setMix(yy.macro.HeroAnimate.Attack, yy.macro.HeroAnimate.Idle);\n        this._setMix(yy.macro.HeroAnimate.Attack, yy.macro.HeroAnimate.Die);\n        this._setMix(yy.macro.HeroAnimate.Attack, yy.macro.HeroAnimate.Hurt);\n    }\n    // 动作开始回调\n    private _onAnimateStartCallback(trackEntry: sp.spine.TrackEntry) {\n        if (this._animateStartCallback) {\n            this._animateStartCallback(trackEntry);\n        }\n    }\n\n    // 动作播放完回调\n    private _onAnimateEndCallback(trackEntry: sp.spine.TrackEntry) {\n        if (this._animateEndCallback) {\n            this._animateEndCallback(trackEntry);\n        }\n    }\n\n    // 动作被打断回调\n    private _onAnimateInterruptCallback(trackEntry: sp.spine.TrackEntry) {\n        if (this._animiateInterruptCallback) {\n            this._animiateInterruptCallback(trackEntry);\n        }\n    }\n\n    // 帧事件回调\n    private _onAnimateEventCallback(trackEntry: sp.spine.TrackEntry, event: sp.spine.Event) {\n        if (this._animiateEventCallback) {\n            this._animiateEventCallback(trackEntry, event);\n        }\n    }\n\n    // 动作融合\n    private _setMix(anim1, anim2, mixTime?) {\n        if (this._spine.findAnimation(anim1) && this._spine.findAnimation(anim2)) {\n            this._spine.setMix(anim1, anim2, mixTime || this._mixTime);\n            this._spine.setMix(anim2, anim1, mixTime || this._mixTime);\n        }\n    }\n\n\n    /**\n     * @description 立即播放当前动画\n     * @param actionName spine 动作名称\n     * @param isLoop 是否循环播放 默认值false\n     */\n    public play(actionName:string,isLoop?:boolean){\n        if (this._spine){\n            let trackIndex = 0;\n             this._spine.setAnimation(trackIndex, actionName, isLoop??false);\n        }\n    }\n\n    /**\n     * @description 暂停当前动画\n     */\n    public stop(){\n        this._spine.paused = true;\n    }\n\n    /**\n     * @description 继续播放当前动画\n     */\n    public resume(){\n        this._spine.paused = false;\n    }\n\n    /**\n     * @description 清理当前动画\n     * @param trackIndex 播放动作队列索引，默认0，即当前动画\n     */\n    public clear(trackIndex:number=0){\n        this._spine.clearTrack(trackIndex);\n    }\n\n    /**\n     * @description 清理作队列索引\n     */\n    public clearAll(){\n        this._spine.clearTracks();\n    }\n\n\n    /** 动画开始回调 */\n    public setAnimateStartCallback(callback:yy.interfaces.SpineTrackEntryCallFunc) {\n        this._animateStartCallback = callback;\n    }\n\n    /** 动画结束回调 */\n    public setAnimateEndCallback(callback: yy.interfaces.SpineTrackEntryCallFunc) {\n        this._animateEndCallback = callback;\n    }\n\n    /** 动画被打断回调 */\n    public setAnimateInterruptCallback(callback: yy.interfaces.SpineTrackEntryCallFunc) {\n        this._animiateInterruptCallback = callback;\n    }\n\n    /** 动画事件回调 */\n    public setAnimateEventCallback(callback) {\n        this._animiateEventCallback = callback;\n    }\n\n    public addEffectFront(node:Node,offset?:Vec3){\n        this.effectFontNode?.addChild(node);\n        if (offset) {\n            node.position = offset;\n        }\n    }\n\n    public addEffectBack(node:Node,offset?:Vec3){\n        this.effectBackNode?.addChild(node);\n        if (offset) {\n            node.position = offset;\n        }\n    }\n\n    /**\n     * addBloodUI\n     */\n    public addBloodUI(node) {\n        let node_blood_ui = this._root.getChildByName(\"node_blood_ui\");\n        node_blood_ui.addChild(node);\n    }\n\n    /**\n     * updateBlood\n     */\n    public updateBlood(cur:number,top:number) {\n        let com = this._root.getComponentInChildren(FightBloodUI);\n        com?.updateBlood(cur,top);\n    } \n    \n    /**\n     * @description 换皮肤\n     * @param skinName:string 皮肤id\n     */\n    public changeSkin(skinName:string) {\n        this._spine.setSkin(skinName);\n    }\n\n    /**\n     * @description 查找插槽\n     */\n    public findSlot(name:string):sp.spine.Slot {\n        return this._spine.findSlot(name);\n    }\n    \n    /**\n     * \n     * @description 更换皮肤的单间装备\n     * @param skinName 新皮肤名字（装备所在的皮肤）\n     * @param oldSlotName 旧插槽的名字\n     * @param newSlotName 新插槽的名字\n     */\n    public changeEquip(skinName:string,oldSlotName:string,newSlotName:string){\n        let skin_origin = this._spine._skeleton.skin.name\n        let slot_origin = this.findSlot(oldSlotName);\n\n        this.changeSkin(skinName);\n        let slot_new = this.findSlot(newSlotName);\n        let attachment_new = slot_new.getAttachment();\n        this.changeSkin(skin_origin);\n        slot_origin.setAttachment(attachment_new);\n    }\n}"]}