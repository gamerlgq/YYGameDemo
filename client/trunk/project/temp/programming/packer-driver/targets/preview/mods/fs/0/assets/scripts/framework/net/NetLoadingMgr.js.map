{"version":3,"sources":["file:///Users/steven/Workspaces/CocosCreatorProjects/3D/YYGameDemo/client/trunk/project/assets/scripts/framework/net/NetLoadingMgr.ts"],"names":["NetLoadingMgr","Component","error","game","Node","_decorator","ErrorCode","Singleton","gameMgr","sceneMgr","Message","ccclass","property","NetLoadindComp","update","dt","netLoadingMgr","tick","init","node","addComponent","addPersistRootNode","_time","index","_msgList","msg","endTime","splice","removeMsgLoading","id","timeup","msgId","Number","msgEvent","code","TIME_OUT","addInnerMessage","addMsgLoading","timeout","idStr","push","showNetLoading","length","element","clear","getInstance"],"mappings":"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","sourcesContent":["import { Component, error, game, log, Node, Pool, Tween, tween, _decorator } from \"cc\"\nimport { ErrorCode } from \"../../app/define/ErrorCode\";\nimport { Protocol } from \"../../app/define/Protocol\";\nimport { Singleton } from \"../components/Singleton\"\nimport { gameMgr } from \"../core/GameMgr\";\nimport { sceneMgr } from \"../core/SceneMgr\";\nimport { Message } from \"../listener/Message\";\n\n\nconst { ccclass, property } = _decorator;\n@ccclass('NetLoadindComp')\nclass NetLoadindComp extends Component {\n    update(dt) {\n        netLoadingMgr.tick(dt)\n    }\n}\n\ninterface IMsg {\n    id:string;\n    endTime:number;\n}\n\n//网络loading管理\nclass NetLoadingMgr extends Singleton {\n    private _msgList:IMsg[] = []\n    private _time:number = 0; \n    \n\n    init() {\n        let node = new Node(\"NetLoadingMgr\")\n        node.addComponent(NetLoadindComp)\n        game.addPersistRootNode(node)\n    }\n\n    tick(dt:number) {\n        this._time += dt;\n\n        let index = 0\n        while (this._msgList[index]) {\n            let msg = this._msgList[index]\n            if (msg.endTime > 0 && this._time >= msg.endTime) {\n                this._msgList.splice(index)\n                this.removeMsgLoading(msg.id)\n                this.timeup(msg)\n            }\n            else {\n                index++\n            }\n        }\n    }\n\n    timeup(msg:IMsg) {\n        //超时\n        error(\"<====time up==== msgId: \" + msg.id)\n        let msgId = Number(msg.id)\n        let msgEvent = new Message(msgId, {code:ErrorCode.TIME_OUT})\n        gameMgr.addInnerMessage(msgEvent)\n    }\n\n    addMsgLoading(id:number | string,  timeout:number = 10) {\n        let idStr = id + \"\"\n        let endTime = timeout > 0 ? this._time + timeout : 0\n        this._msgList.push({id:idStr, endTime: endTime})\n        sceneMgr.showNetLoading(true)\n    }\n\n    removeMsgLoading(id:number | string) {\n        let idStr = id + \"\"\n        for (let index = 0; index < this._msgList.length; index++) {\n            const element = this._msgList[index];\n            if (idStr == element.id) {\n                this._msgList.splice(index)\n                break;\n            }\n        }\n\n        if (this._msgList.length == 0) {\n            sceneMgr.showNetLoading(false)\n        }\n    }\n\n    clear() {\n        netLoadingMgr = null;\n    }\n}\n\nexport let netLoadingMgr = (() => {\n    return NetLoadingMgr.getInstance<NetLoadingMgr>();\n})();"]}